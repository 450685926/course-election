<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.server.edu.mutual.dao.ElcMutualRoundCourseDao">
  <resultMap id="BaseResultMap" type="com.server.edu.election.entity.CourseOpen">
    <id column="ID_" jdbcType="BIGINT" property="id" />
    <result column="CALENDAR_ID_" jdbcType="BIGINT" property="calendarId" />
    <result column="COURSE_CODE_" jdbcType="VARCHAR" property="courseCode" />
    <result column="COURSE_NAME_" jdbcType="VARCHAR" property="courseName" />
    <result column="COURSE_NAME_EN_" jdbcType="VARCHAR" property="courseNameEn" />
    <result column="IS_ELECTIVE_" jdbcType="INTEGER" property="isElective" />
    <result column="FACULTY_" jdbcType="VARCHAR" property="faculty" />
    <result column="TERM_" jdbcType="VARCHAR" property="term" />
    <result column="CROSS_TERM_" jdbcType="INTEGER" property="crossTerm" />
    <result column="TRAINING_LEVEL_" jdbcType="VARCHAR" property="trainingLevel" />
    <result column="FORM_LEARNING_" jdbcType="VARCHAR" property="formLearning" />
    <result column="NATURE_" jdbcType="INTEGER" property="nature" />
    <result column="PERIOD_" jdbcType="DOUBLE" property="period" />
    <result column="CREDITS_" jdbcType="DOUBLE" property="credits" />
    <result column="NUMBER_" jdbcType="INTEGER" property="number" />
    <result column="IS_OPEN_" jdbcType="INTEGER" property="isOpen" />
    <result column="REMARK_" jdbcType="VARCHAR" property="remark" />
    <result column="CREATED_AT_" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="UPDATED_AT_" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  
  <resultMap type="com.server.edu.election.dto.CourseOpenDto" id="CourseOpenDtoMap" extends="BaseResultMap">
  	<result column="teachingClassId" jdbcType="BIGINT" property="teachingClassId" />
  	<result column="teachingClassCode" jdbcType="VARCHAR" property="teachingClassCode" />
  	<result column="campus" jdbcType="VARCHAR" property="campus" />
  	<result column="teachClassType" jdbcType="VARCHAR" property="teachClassType" />
  	<result column="maxNumber" jdbcType="INTEGER" property="maxNumber" />
  	<result column="currentNumber" jdbcType="INTEGER" property="currentNumber" />
  	<result column="teachingClassName" jdbcType="VARCHAR" property="teachingClassName" />
  	<result column="COURSE_LABEL_ID_" jdbcType="BIGINT" property="courseLabelId" />
  	<result column="teacherCode" jdbcType="VARCHAR" property="teacherCode" />
  	<result column="reserveNumber" jdbcType="VARCHAR" property="reserveNumber" />
  	<result column="teachClassRemark" jdbcType="VARCHAR" property="teachingClassRemark" />
  	<result column="teachClassName" jdbcType="VARCHAR" property="teachingClassName" />
  	<result column="manArrangeFlag" jdbcType="INTEGER" property="manArrangeFlag" />
  	<result column="COURSE_LABEL_NAME_" jdbcType="VARCHAR" property="courseLabelName" />
  	<result column="thirdWithdrawNumber" jdbcType="INTEGER" property="thirdWithdrawNumber" />
  </resultMap>
  
  <select id="listUnAddPage" resultMap="CourseOpenDtoMap">
		SELECT DISTINCT
		t1.CALENDAR_ID_,
		t1.COURSE_CODE_,
		t1.COURSE_NAME_,
		t1.NATURE_,
		t1.IS_ELECTIVE_,
		t1.FACULTY_,
		t1.CREDITS_,
		t1.PERIOD_,
		t3.CAMPUS_ campus,
		t4.ID_ teachingClassId,
		t4.CODE_ teachingClassCode,
		t4.COURSE_LABEL_ID_,
		CL.LABEL_ AS COURSE_LABEL_NAME_,
		GROUP_CONCAT(distinct t5.TEACHER_CODE_) teacherCode
		FROM
			course_open_t t1
		JOIN teaching_task_t t3 ON t3.COURSE_OPEN_ID_ = t1.ID_
		JOIN teaching_class_t t4 ON (t4.TASK_ID_ = t3.ID_ and t4.DELETE_STATUS_ =0)
		LEFT JOIN courses_label_t CL ON t4.COURSE_LABEL_ID_ = CL.ID_
		LEFT JOIN teaching_class_teacher_t t5  ON (t5.TEACHING_CLASS_ID_  = t4.ID_ AND t5.TYPE_ =0)
	  	<where>
		  	t1.CALENDAR_ID_ = #{calendarId}
		  	and t1.IS_OPEN_ = 1
			<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(projectId)">
		  	and t1.PROJ_ID_ = #{projectId}
		  	</if>
			and t4.DEPLOY_FLAG_ &gt; 0
		  	and t4.ID_ NOT IN (
		  	 select t.TEACHING_CLASS_ID_ from election_rounds_cour_t t where t.ROUNDS_ID_ = #{roundId}
		  	)
			<if test="mode==2">
				and t1.COURSE_CODE_ in 
				<foreach collection="list" item="code" open="(" separator="," close=")" >
					#{code}
				</foreach>
			</if>
	  		<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(faculty)">
	  		and t1.FACULTY_ = #{faculty}
	  		</if>
		  	<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(trainingLevel)">
	  		and t1.TRAINING_LEVEL_ = #{trainingLevel}
	  		</if>
		  	<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseCode)">
	  		and t1.COURSE_CODE_ = #{courseCode}
	  		</if>
	  	    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseName)">
	  		and t1.COURSE_NAME_ = #{courseName}
	  		</if>
	  		<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(nature)">
  		     and t1.NATURE_ = #{nature}
  		    </if>
	  	    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(label)">
	  		and t4.COURSE_LABEL_ID_ = #{label}
	  		</if>
	  		<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(keyword)">
	  		and (t1.COURSE_CODE_ like CONCAT('%', #{keyword}, '%') OR t1.COURSE_NAME_ like CONCAT('%', #{keyword}, '%'))
	  		</if>
			<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(isElective)">
				and t1.IS_ELECTIVE_ = #{isElective}
			</if>
			<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(teachingClassCode)">
				and t4.CODE_ = #{teachingClassCode},
			</if>
	  	</where>
	  	GROUP BY t4.ID_
	  	order by t4.CODE_
  </select>  
  
  <select id="listUnAddPageGraduate" resultMap="CourseOpenDtoMap">
	  	select DISTINCT
	  		t1.CALENDAR_ID_,
			t1.COURSE_CODE_,
			t1.COURSE_NAME_,
			t1.IS_ELECTIVE_,
			t1.NATURE_,
			t1.CREDITS_,
			t1.FACULTY_,
			t4.CAMPUS_ campus,
	    	t4.CODE_ teachingClassCode,
			t4.NAME_ teachingClassName,
			t4.ID_ teachingClassId,
			t4.MAN_ARRANGE_FLAG_ manArrangeFlag,
			GROUP_CONCAT(distinct t5.TEACHER_CODE_) teacherCode
		from course_open_t t1 
	  		left JOIN teaching_task_t t3 ON t3.COURSE_OPEN_ID_ = t1.ID_
	  		left JOIN teaching_class_t t4 ON t4.TASK_ID_ = t3.ID_
	  		LEFT JOIN teaching_class_teacher_t t5  ON (t5.TEACHING_CLASS_ID_  = t4.ID_ AND t5.TYPE_ =0)
	  	<where>
		  	t1.CALENDAR_ID_ = #{calendarId}
		  	and t1.IS_OPEN_ = 1
		  	and t4.MAN_ARRANGE_FLAG_ in(1,2,3)
			<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(projectId)">
		  	and t1.PROJ_ID_ = #{projectId}
		  	</if>
		  	and t4.ID_ NOT IN (
		  	 	select TEACHING_CLASS_ID_ from election_rounds_cour_t where ROUNDS_ID_ = #{roundId}
		  	)
	  		<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(faculty)">
	  			and t1.FACULTY_ = #{faculty}
	  		</if>
		  	<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(nature)">
	  			and t1.NATURE_ = #{nature}
	  		</if>
			<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(isElective)">
				and t1.IS_ELECTIVE_ = #{isElective}
			</if>
		  	<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseCode)">
	  			and t1.COURSE_CODE_ = #{courseCode}
	  		</if>
	  	    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseName)">
	  			and t1.COURSE_NAME_ = #{courseName}
	  		</if>
			<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(teachingClassCode)">
				and t4.CODE_  = #{teachingClassCode}
			</if>
			<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(keyword)">
	  		and (t1.COURSE_CODE_ like CONCAT('%', #{keyword}, '%') OR t1.COURSE_NAME_ like CONCAT('%', #{keyword}, '%'))
	  		</if>
	  	</where>
	  	GROUP BY t4.ID_
  		order by t4.CODE_
  </select>
  
  <select id="listAddedCourse" resultType="long">
  	select TEACHING_CLASS_ID_ from election_rounds_cour_t where ROUNDS_ID_ = #{roundId} and TEACHING_CLASS_ID_ IN
  	<foreach item="id" collection="teachingClassIds"  index="index" open="(" separator="," close=")">  
       #{id}  
    </foreach>
  </select>
  
  <insert id="batchInsert" parameterType="java.util.List">
    insert into election_rounds_cour_t(
    ROUNDS_ID_,TEACHING_CLASS_ID_
    )
    values
    <foreach item="item" collection="list" index="index"
      separator=",">
      (
      #{item.roundsId},
      #{item.teachingClassId}
      )
    </foreach>
   </insert>
  
   <select id="listPage" resultMap="CourseOpenDtoMap">
	SELECT
		t1.CALENDAR_ID_,
		t1.COURSE_CODE_,
		t1.COURSE_NAME_,
		t1.NATURE_,
		t1.FACULTY_,
		t1.IS_ELECTIVE_,
		t1.CREDITS_,
		t1.PERIOD_,
		t2.CAMPUS_ campus,
		t3.ID_ teachingClassId,
		t3.CODE_ teachingClassCode,
		t3.COURSE_LABEL_ID_,
		CL.LABEL_ AS COURSE_LABEL_NAME_,
		GROUP_CONCAT(DISTINCT t5.TEACHER_CODE_) teacherCode
	FROM
		course_open_t t1
	JOIN teaching_task_t t2 ON t2.COURSE_OPEN_ID_ = t1.ID_
	JOIN teaching_class_t t3 ON t3.TASK_ID_ = t2.ID_
	JOIN election_rounds_cour_t t4 ON t4.TEACHING_CLASS_ID_ = t3.ID_
	LEFT JOIN courses_label_t CL ON t3.COURSE_LABEL_ID_ = CL.ID_
	LEFT JOIN teaching_class_teacher_t t5 ON (
		t5.TEACHING_CLASS_ID_ = t3.ID_
		AND t5.TYPE_ = 0
	)
  	<where>
	  	t1.CALENDAR_ID_ = #{query.calendarId} 
  		<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.roundId)">
  		and t4.ROUNDS_ID_ = #{query.roundId}
  		</if>
  		<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.projectId)">
  		and t1.PROJ_ID_ = #{query.projectId}
  		</if>
  		<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.faculty)">
  		and t1.FACULTY_ = #{query.faculty}
  		</if>
	  	<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.trainingLevel)">
  		and t1.TRAINING_LEVEL_ = #{query.trainingLevel}
  		</if>
	  	<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.courseCode)">
  		and t1.COURSE_CODE_ = #{query.courseCode}
  		</if>
  	    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.courseName)">
  		and t1.COURSE_NAME_ = #{query.courseName}
  		</if>
  	    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.label)">
  		and t3.COURSE_LABEL_ID_ = #{query.label}
  		</if>
  	    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.nature)">
  		and t1.NATURE_ = #{query.nature}
  		</if>
		<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.isElective)">
		and t1.IS_ELECTIVE_ = #{query.isElective}
		</if>
  		<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.keyword)">
  		and (t1.COURSE_CODE_ like CONCAT(#{query.keyword}, '%') OR t1.COURSE_NAME_ like CONCAT(#{query.keyword}, '%'))
  		</if>
  	</where>
  		GROUP BY t3.ID_
	  	order by t3.CODE_
  </select>

  <select id="listPageGraduate" resultMap="CourseOpenDtoMap">
  	select 
  		t1.CALENDAR_ID_,
    	t4.CODE_ id,
		t1.COURSE_CODE_,
		t1.COURSE_NAME_,
		t1.NATURE_,
	    t1.IS_ELECTIVE_,
		t4.NAME_ teachingClassName,
		t1.TRAINING_LEVEL_,
		t1.FACULTY_,
		t4.CAMPUS_ campus,
		t4.ID_ teachingClassId,
		t4.CODE_ teachingClassCode,
		t4.MAN_ARRANGE_FLAG_ manArrangeFlag,
		GROUP_CONCAT(DISTINCT t5.TEACHER_CODE_) teacherCode
  	from course_open_t t1 
  		left JOIN teaching_task_t t3 ON t3.COURSE_OPEN_ID_ = t1.ID_
  		left JOIN teaching_class_t t4 ON t4.TASK_ID_ = t3.ID_
  		left JOIN election_rounds_cour_t t2 ON t2.TEACHING_CLASS_ID_ = t4.ID_
  		LEFT JOIN teaching_class_teacher_t t5 ON (
			t5.TEACHING_CLASS_ID_ = t3.ID_ AND t5.TYPE_ = 0
		)
  	<where>
	  	t1.CALENDAR_ID_ = #{query.calendarId} 
  		<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.roundId)">
  			and t2.ROUNDS_ID_ = #{query.roundId}
  		</if>
  		<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.projectId)">
  			and t1.PROJ_ID_ = #{query.projectId}
  		</if>
  		<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.faculty)">
  			and t1.FACULTY_ = #{query.faculty}
  		</if>
	  	<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.nature)">
  			and t1.NATURE_ = #{query.nature}
  		</if>
		<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.isElective)">
			and t1.IS_ELECTIVE_ = #{query.isElective}
		</if>
	  	<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.keyword)">
  			and  (t4.CODE_ like CONCAT(#{query.keyword}, '%') OR t1.COURSE_NAME_ like CONCAT(#{query.keyword}, '%'))
  		</if>
  		<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.campus)">
	  		and t4.CAMPUS_ = #{query.campus}
  		</if>
  		<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.trainingLevel)">
	  		and t1.TRAINING_LEVEL_ = #{query.trainingLevel}
	  	</if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.courseCode)">
            and t1.COURSE_CODE_ = #{query.courseCode}
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.teachingClassCode)">
            and t4.CODE_ = #{query.teachingClassCode}
        </if>
  	</where>
  		GROUP BY t4.ID_
	  	order by t4.CODE_
  </select>
  
  <delete id="deleteByRoundId">
    delete from election_rounds_cour_t where ROUNDS_ID_ = #{roundId}
  </delete>
  
  
  
  
  
  
  
  
  
    
  
  <select id="listTeachingClassPage" parameterType="com.server.edu.election.query.ElecRoundCourseQuery" resultMap="CourseOpenDtoMap">
  	select op.*,cl.ID_ AS teachingClassId, cl.CODE_ AS teachingClassCode 
  	from course_open_t op
	  join teaching_task_t ta on op.ID_=ta.COURSE_OPEN_ID_
	  JOIN teaching_class_t cl on cl.TASK_ID_=ta.ID_ and cl.DEPLOY_FLAG_ &gt; 0
	  <where>
		  cl.ID_ in (
		   SELECT DISTINCT co.TEACHING_CLASS_ID_ 
		   FROM election_rounds_t el
		   join election_rounds_cour_t co on el.ID_=co.ROUNDS_ID_
		   where el.CALENDAR_ID_=#{calendarId} and el.MODE_=#{mode}
		  )
		  and op.IS_OPEN_=1 and op.CALENDAR_ID_=#{calendarId}
		  <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseCode)">
			  and cl.CODE_ like CONCAT(#{courseCode},'%')
		  </if>
		  <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseName)">
			  and (
				  op.COURSE_CODE_ like CONCAT(#{courseName},'%') 
				  or op.COURSE_NAME_ like CONCAT(#{courseName},'%')
			  )
		  </if>
		  <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(includeCourseCodes)">
			 and op.COURSE_CODE_ in
			  <foreach collection="includeCourseCodes" open="(" separator="," close=")" item="code">
				  #{code}
			  </foreach>
		  </if>
	  </where>
  </select>
  

  
  
  <!-- 查询轮次所有可选课程(本科生) -->
  <select id="selectCorseRefTeachClassByRoundId" resultMap="CourseOpenDtoMap">
  	  select 
  	  	op.COURSE_CODE_, cl.ID_ AS teachingClassId
  	  from course_open_t op
	  JOIN teaching_task_t ta ON op.ID_=ta.COURSE_OPEN_ID_
	  JOIN teaching_class_t cl ON (cl.TASK_ID_=ta.ID_ and cl.DEPLOY_FLAG_ &gt; 0)
	  JOIN election_rounds_cour_t co ON co.TEACHING_CLASS_ID_ = cl.ID_
	  where
		 co.ROUNDS_ID_ = #{roundId}
		 and op.CALENDAR_ID_ = #{calendarId}
		 order by cl.CODE_
  </select>
  <!-- 查询轮次所有可选课程(研究生) -->
  <select id="selectCorseRefTeachClassGraduteByRoundId" resultMap="CourseOpenDtoMap">
  	  select 
  	  	op.COURSE_CODE_, cl.ID_ AS teachingClassId
  	  from course_open_t op
	  JOIN teaching_task_t ta ON op.ID_=ta.COURSE_OPEN_ID_
	  JOIN teaching_class_t cl ON cl.TASK_ID_=ta.ID_
	  JOIN election_rounds_cour_t co ON co.TEACHING_CLASS_ID_ = cl.ID_
	  LEFT JOIN teaching_class_arrange_time_t time on cl.ID_ = time.TEACHING_CLASS_ID_
	  where
	  	 <!-- time.TYPE_ = '2'  -->
	  	 cl.MAN_ARRANGE_FLAG_ in(1,2,3)
	  	 and op.PROJ_ID_ = #{manageDptId} 
		 and co.ROUNDS_ID_ = #{roundId} 
		 and op.CALENDAR_ID_ = #{calendarId}
		 order by cl.CODE_
  </select>
  
   <!-- 查询学年学期所有可选课程(本科生) -->
   <select id="selectCourseByCalendarId" resultMap="CourseOpenDtoMap">
 	  select 
 	     op.COURSE_CODE_,cl.ID_ AS teachingClassId,op.FACULTY_,op.ID_ 
  	  from course_open_t op
	  JOIN teaching_task_t ta ON op.ID_=ta.COURSE_OPEN_ID_
	  JOIN teaching_class_t cl ON (cl.TASK_ID_=ta.ID_ and cl.DEPLOY_FLAG_ &gt; 0 and cl.DELETE_STATUS_ =0)
	  where
		 op.CALENDAR_ID_ = #{calendarId}
  </select>
  <!-- 查询学年学期所有可选课程(研究生) -->
  <select id="selectCorseGraduteByCalendarId" resultMap="CourseOpenDtoMap">
  	  select 
  	  	distinct op.COURSE_CODE_, cl.ID_ AS teachingClassId,op.FACULTY_,op.ID_ 
  	  from course_open_t op
	  JOIN teaching_task_t ta ON op.ID_=ta.COURSE_OPEN_ID_
	  JOIN teaching_class_t cl ON cl.TASK_ID_=ta.ID_
	  left JOIN teaching_class_arrange_time_t time on cl.ID_ = time.TEACHING_CLASS_ID_
	  where
	  	 <!-- time.TYPE_ = '2' and -->
	  	 cl.MAN_ARRANGE_FLAG_ in(1,2,3) and
	  	 op.PROJ_ID_ = #{projectId} and
		 op.CALENDAR_ID_ = #{calendarId}
		 order by cl.CODE_
  </select>
  <!--教学班信息 -->
  <select id="selectTeachingClassByCalendarId" resultMap="CourseOpenDtoMap">
  	  select 
  	  	op.*,cl.ID_ AS teachingClassId, cl.CODE_ AS teachingClassCode ,cl.CAMPUS_ AS campus,cl.CLASS_TYPE_ AS teachClassType,
  	  	cl.NUMBER_ AS maxNumber,cl.ELC_NUMBER_ AS currentNumber,cl.REMARK_ AS remark,cl.RESERVE_NUMBER_ AS reserveNumber,cl.REMARK_ AS teachClassRemark,cl.NAME_ AS teachClassName,
  	  	cl.MAN_ARRANGE_FLAG_ AS manArrangeFlag,cl.THIRD_WITHDRAW_NUMBER thirdWithdrawNumber
  	  from course_open_t op
	  JOIN teaching_task_t ta ON op.ID_=ta.COURSE_OPEN_ID_
	  JOIN teaching_class_t cl ON (cl.TASK_ID_=ta.ID_ and cl.DEPLOY_FLAG_ &gt; 0 and cl.DELETE_STATUS_ =0)
	  where
		 op.CALENDAR_ID_ = #{calendarId}
		 and op.PROJ_ID_ =1
	  union
	 SELECT
		distinct op1.*, cl1.ID_ AS teachingClassId,
		cl1.CODE_ AS teachingClassCode,
		cl1.CAMPUS_ AS campus,
		cl1.CLASS_TYPE_ AS teachClassType,
		cl1.NUMBER_ AS maxNumber,
		cl1.ELC_NUMBER_ AS currentNumber,
		cl1.REMARK_ AS remark,cl1.RESERVE_NUMBER_ AS reserveNumber,cl1.REMARK_ AS teachClassRemark,cl1.NAME_ AS teachClassName,
		cl1.MAN_ARRANGE_FLAG_ AS manArrangeFlag,
		cl1.THIRD_WITHDRAW_NUMBER thirdWithdrawNumber
	FROM
		course_open_t op1
	JOIN teaching_task_t ta ON op1.ID_ = ta.COURSE_OPEN_ID_
	JOIN teaching_class_t cl1 ON cl1.TASK_ID_ = ta.ID_
	left JOIN teaching_class_arrange_time_t time ON cl1.ID_ = time.TEACHING_CLASS_ID_
	WHERE
		cl1.MAN_ARRANGE_FLAG_ in(1,2,3)
	AND op1.PROJ_ID_ in(2,4)
	AND op1.CALENDAR_ID_ = #{calendarId}
	ORDER BY
		teachingClassCode
  </select>
  <!-- 研究生查询教学班信息 -->
  <select id="selectTeachingClassGraduteByCalendarId" resultMap="CourseOpenDtoMap">
  	  select 
  	  	op.*,cl.ID_ AS teachingClassId, cl.CODE_ AS teachingClassCode ,cl.CAMPUS_ AS campus,cl.CLASS_TYPE_ AS teachClassType,
  	  	cl.NUMBER_ AS maxNumber,cl.ELC_NUMBER_ AS currentNumber 
  	  from course_open_t op 
	  JOIN teaching_task_t ta ON op.ID_=ta.COURSE_OPEN_ID_ 
	  JOIN teaching_class_t cl ON cl.TASK_ID_=ta.ID_
	  left JOIN teaching_class_arrange_time_t time on cl.ID_ = time.TEACHING_CLASS_ID_ 
	  where
	  	 <!-- time.TYPE_ = '2' and  -->
	  	 cl.MAN_ARRANGE_FLAG_ in(1,2,3) and
	  	 op.PROJ_ID_ in(2,4) and 
		 op.CALENDAR_ID_ = #{calendarId}
	  order by cl.CODE_
  </select>
    
    <select id="getAddedCourseByRoundIds" parameterType="java.util.List" resultMap="CourseOpenDtoMap">
		SELECT
			t1.*,t4.COURSE_CODE_,t4.COURSE_NAME_
		FROM
			election_rounds_cour_t t1
		JOIN teaching_class_t t2 ON t1.TEACHING_CLASS_ID_ = t2.ID_
		JOIN teaching_task_t t3 ON t3.ID_ = t2.TASK_ID_
		JOIN course_open_t t4 ON t4.ID_ = t3.COURSE_OPEN_ID_
		<where>
	        t1.ROUNDS_ID_ in
	        <foreach item="id" collection="list" index="index" open="(" separator="," close=")">
	          #{id}
	        </foreach>
		</where> 
    </select>
    
   <!-- 查询学年学期所有可选课程(本研互选) -->
   <select id="selectCourseByCalendarIdForMutual" resultMap="CourseOpenDtoMap">
	   <choose>
	   		<when test="projectId==1">
		   		  select 
			 	     distinct op.COURSE_CODE_,op.FACULTY_,op.ID_ 
			  	  from course_open_t op
					  JOIN teaching_task_t ta ON op.ID_=ta.COURSE_OPEN_ID_
					  JOIN teaching_class_t cl ON (cl.TASK_ID_=ta.ID_ and cl.DEPLOY_FLAG_ &gt; 0 and cl.DELETE_STATUS_ =0)
				  where
			 		  op.CALENDAR_ID_ = #{calendarId}
	   		</when>
	   		<otherwise>
	   			 select 
  	  	             distinct op.COURSE_CODE_,op.FACULTY_,op.ID_ 
  	  			 from course_open_t op
	  				 JOIN teaching_task_t ta ON op.ID_=ta.COURSE_OPEN_ID_
	  				 JOIN teaching_class_t cl ON cl.TASK_ID_=ta.ID_
	  			 where
				  	 cl.MAN_ARRANGE_FLAG_ in(1,2,3) and
				  	 op.PROJ_ID_ = #{projectId} and
					 op.CALENDAR_ID_ = #{calendarId}
	   		</otherwise>
	   </choose>
  </select>
</mapper>