<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.server.edu.election.dao.ElecRoundCourseDao">
  <resultMap id="BaseResultMap" type="com.server.edu.election.entity.CourseOpen">
    <id column="ID_" jdbcType="BIGINT" property="id" />
    <result column="CALENDAR_ID_" jdbcType="BIGINT" property="calendarId" />
    <result column="COURSE_CODE_" jdbcType="VARCHAR" property="courseCode" />
    <result column="COURSE_NAME_" jdbcType="VARCHAR" property="courseName" />
    <result column="COURSE_NAME_EN_" jdbcType="VARCHAR" property="courseNameEn" />
    <result column="IS_ELECTIVE_" jdbcType="INTEGER" property="isElective" />
    <result column="FACULTY_" jdbcType="VARCHAR" property="faculty" />
    <result column="TERM_" jdbcType="VARCHAR" property="term" />
    <result column="CROSS_TERM_" jdbcType="INTEGER" property="crossTerm" />
    <result column="TRAINING_LEVEL_" jdbcType="VARCHAR" property="trainingLevel" />
    <result column="FORM_LEARNING_" jdbcType="VARCHAR" property="formLearning" />
    <result column="NATURE_" jdbcType="INTEGER" property="nature" />
    <result column="PERIOD_" jdbcType="DOUBLE" property="period" />
    <result column="CREDITS_" jdbcType="DOUBLE" property="credits" />
    <result column="NUMBER_" jdbcType="INTEGER" property="number" />
    <result column="IS_OPEN_" jdbcType="INTEGER" property="isOpen" />
    <result column="REMARK_" jdbcType="VARCHAR" property="remark" />
    <result column="CREATED_AT_" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="UPDATED_AT_" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  
  <resultMap type="com.server.edu.election.dto.CourseOpenDto" id="CourseOpenDtoMap" extends="BaseResultMap">
  	<result column="teachingClassId" jdbcType="BIGINT" property="teachingClassId" />
  	<result column="teachingClassCode" jdbcType="VARCHAR" property="teachingClassCode" />
  	<result column="campus" jdbcType="VARCHAR" property="campus" />
  	<result column="teachClassType" jdbcType="VARCHAR" property="teachClassType" />
  	<result column="maxNumber" jdbcType="INTEGER" property="maxNumber" />
  	<result column="currentNumber" jdbcType="INTEGER" property="currentNumber" />
  </resultMap>
  
  <select id="listPage" resultMap="CourseOpenDtoMap">
  	select t1.* from course_open_t t1 
  	JOIN election_rounds_cour_t t2 ON t2.COURSE_CODE_ = t1.COURSE_CODE_
  	<where>
	  	t1.CALENDAR_ID_ = #{query.calendarId} 
  		<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.roundId)">
  		and t2.ROUNDS_ID_ = #{query.roundId}
  		</if>
  		<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.faculty)">
  		and t1.FACULTY_ = #{query.faculty}
  		</if>
	  	<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.trainingLevel)">
  		and t1.TRAINING_LEVEL_ = #{query.trainingLevel}
  		</if>
	  	<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.nature)">
  		and t1.NATURE_ = #{query.nature}
  		</if>
  	</where> 
  </select>
  
  <select id="listTeachingClassPage" parameterType="com.server.edu.election.query.ElecRoundCourseQuery" resultMap="CourseOpenDtoMap">
  	select op.*,cl.ID_ AS teachingClassId, cl.CODE_ AS teachingClassCode 
  	from course_open_t op
	  join teaching_task_t ta on op.ID_=ta.COURSE_OPEN_ID_
	  JOIN teaching_class_t cl on cl.TASK_ID_=ta.ID_
	  <where>
		  op.COURSE_CODE_ in (
		   SELECT DISTINCT co.COURSE_CODE_ 
		   FROM election_rounds_t el
		   join election_rounds_cour_t co on el.ID_=co.ROUNDS_ID_
		   where el.CALENDAR_ID_=#{calendarId} and el.MODE_=#{mode}
		  )
		  and op.IS_OPEN_=1 and op.CALENDAR_ID_=#{calendarId}
		  <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseCode)">
			  and cl.CODE_ like CONCAT(#{courseCode},'%')
		  </if>
		  <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseName)">
			  and (
				  op.COURSE_CODE_ like CONCAT(#{courseName},'%') 
				  or op.COURSE_NAME_ like CONCAT(#{courseName},'%')
			  )
		  </if>
	  </where>
  </select>
  
  <select id="listUnAddPage" resultMap="CourseOpenDtoMap">
  	select DISTINCT t1.* 
	from course_open_t t1 
  	JOIN teaching_task_t t3 ON t3.COURSE_OPEN_ID_ = t1.ID_
  	JOIN teaching_class_t t4 ON t4.TASK_ID_ = t3.ID_
  	<where>
	  	t1.CALENDAR_ID_ = #{query.calendarId}
	  	and t1.IS_OPEN_ = 1
		and t4.DEPLOY_FLAG_ =1
	  	and t1.COURSE_CODE_ NOT IN (
	  	 select COURSE_CODE_ from election_rounds_cour_t where ROUNDS_ID_ = #{query.roundId}
	  	)
		<if test="query.mode==2">
			and t1.COURSE_CODE_ in 
			<foreach collection="list" item="code" open="(" separator="," close=")" >
				#{code}
			</foreach>
		</if>
  		<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.faculty)">
  		and t1.FACULTY_ = #{query.faculty}
  		</if>
	  	<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.trainingLevel)">
  		and t1.TRAINING_LEVEL_ = #{query.trainingLevel}
  		</if>
	  	<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.nature)">
  		and t1.NATURE_ = #{query.nature}
  		</if>
  	</where> 
  </select>
  
  <select id="listAddedCourse" resultType="string">
  	select COURSE_CODE_ from election_rounds_cour_t where ROUNDS_ID_ = #{roundId} and COURSE_CODE_ IN
  	<foreach item="id" collection="courseCodes"  index="index" open="(" separator="," close=")">  
       #{id}  
    </foreach>
  </select>
  
  <insert id="add">
  	insert into election_rounds_cour_t(ROUNDS_ID_, COURSE_CODE_) values(#{roundId}, #{courseCode})
  </insert>
  
  <delete id="delete">
  	delete from election_rounds_cour_t where ROUNDS_ID_ = #{roundId} and COURSE_CODE_ IN
  	<foreach item="id" collection="courseCodes"  index="index" open="(" separator="," close=")">  
       #{id}  
    </foreach>
  </delete>
  
  <delete id="deleteByRoundId">
    delete from election_rounds_cour_t where ROUNDS_ID_ = #{roundId}
  </delete>
  
  <select id="selectTeachingClassByRoundId" resultMap="CourseOpenDtoMap">
  	  select op.*,cl.ID_ AS teachingClassId, cl.CODE_ AS teachingClassCode ,cl.CAMPUS_ AS campus,cl.CLASS_TYPE_ AS teachClassType,cl.NUMBER_ AS maxNumber,cl.ELC_NUMBER_ AS currentNumber
  	  from course_open_t op
	  JOIN teaching_task_t ta ON op.ID_=ta.COURSE_OPEN_ID_
	  JOIN teaching_class_t cl ON (cl.TASK_ID_=ta.ID_ and cl.DEPLOY_FLAG_ = 1)
	  JOIN election_rounds_cour_t co ON co.COURSE_CODE_ = op.COURSE_CODE_
	  where
		 co.ROUNDS_ID_ = #{roundId}
		 and op.CALENDAR_ID_ = #{calendarId}
		 order by cl.CODE_
  </select>
  
</mapper>