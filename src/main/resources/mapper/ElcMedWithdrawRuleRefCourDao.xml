<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.server.edu.election.dao.ElcMedWithdrawRuleRefCourDao">
  <resultMap id="BaseResultMap" type="com.server.edu.election.entity.ElcMedWithdrawRuleRefCour">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="MED_WITHDRAW_RULE_ID_" jdbcType="BIGINT" property="medWithdrawRuleId" />
    <id column="TEACHING_CLASS_ID_" jdbcType="BIGINT" property="teachingClassId" />
  </resultMap>
  <select id="selectMedRuleRefCours" parameterType="com.server.edu.election.dto.ElcMedWithdrawRuleRefCourDto" resultType="com.server.edu.election.vo.ElcMedWithdrawRuleRefCourVo">
		    SELECT
			t1.MED_WITHDRAW_RULE_ID_ medWithdrawRuleId,
			t1.TEACHING_CLASS_ID_ teachingClassId,
			t2.CODE_ code,
			t2.NAME_ name,
			t2.CAMPUS_ campus,
			t4.COURSE_CODE_ courseCode,
			t4.COURSE_NAME_ courseName,
			t4.COURSE_NAME_EN_ courseNameEn,
			t4.TRAINING_LEVEL_ trainingLevel,
			t4.IS_ELECTIVE_ nature,
			t4.FACULTY_ faculty,
			t4.CREDITS_ credits,
			GROUP_CONCAT(distinct t6.TEACHER_CODE_) teacherName
		FROM
			elc_med_withdraw_rule_ref_cour_t t1
		INNER JOIN teaching_class_t t2 ON t1.TEACHING_CLASS_ID_ = t2.ID_
		INNER JOIN teaching_task_t t3 ON t2.TASK_ID_ = t3.ID_
		INNER JOIN course_open_t t4 ON t3.COURSE_OPEN_ID_ = t4.ID_
		INNER JOIN elc_med_withdraw_rules_t t5 ON t5.ID_ = t1.MED_WITHDRAW_RULE_ID_
		LEFT JOIN teaching_class_teacher_t t6  ON (t6.TEACHING_CLASS_ID_  = t2.ID_ AND t6.TYPE_ =0)
		<where>
	      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(projectId)">
	         t5.PROJECT_ID= #{projectId}
	      </if>
	      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(medWithdrawRuleId)">
	        and t1.MED_WITHDRAW_RULE_ID_= #{medWithdrawRuleId}
	      </if>
	      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(campus)">
	        and t2.CAMPUS_= #{campus}
	      </if>
	      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(faculty)">
	        and t4.FACULTY_= #{faculty}
	      </if> 
	      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(nature)">
	        and t4.IS_ELECTIVE_= #{nature}
	      </if>
	     <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(parameter)">
	         and (t4.COURSE_CODE_ like concat('%',#{parameter},'%') or t2.ID_ like concat('%',#{parameter},'%'))
	      </if>
	      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(teachingClasscode)">
	        and t2.CODE_= #{teachingClasscode}
	      </if>	      	       
	      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseName)">
	        and t4.COURSE_NAME_= #{courseName}
	      </if>
	    </where>
  </select>
  
  <select id="selectUnMedRuleRefCours" parameterType="com.server.edu.election.dto.ElcMedWithdrawRuleRefCourDto" resultType="com.server.edu.election.vo.ElcMedWithdrawRuleRefCourVo">
		SELECT
		    t2.ID_  teachingClassId,
			t2.CODE_ CODE,
			t2.NAME_ NAME,
			t2.CAMPUS_ campus,
			t4.COURSE_CODE_ courseCode,
			t4.COURSE_NAME_ courseName,
			t4.COURSE_NAME_EN_ courseNameEn,
			t4.TRAINING_LEVEL_ trainingLevel,
			t4.IS_ELECTIVE_ nature,
			t4.FACULTY_ faculty,
		    t4.CREDITS_ credits,
			GROUP_CONCAT(distinct t6.TEACHER_CODE_) teacherName
		FROM
			(
				SELECT
					*
				FROM
					teaching_class_t t1
				WHERE
					ID_ NOT IN (
						SELECT
							TEACHING_CLASS_ID_
						FROM
							elc_med_withdraw_rule_ref_cour_t c
						INNER JOIN  elc_med_withdraw_rules_t r ON c.MED_WITHDRAW_RULE_ID_ = r.ID_ and r.PROJECT_ID = 1
					)
				AND t1.DEPLOY_FLAG_ &gt; 0
			) t2
		INNER JOIN teaching_task_t t3 ON t2.TASK_ID_ = t3.ID_
		INNER JOIN course_open_t t4 ON t4.ID_ = t3.COURSE_OPEN_ID_ and t4.IS_OPEN_ = 1
		LEFT JOIN teaching_class_teacher_t t6  ON (t6.TEACHING_CLASS_ID_  = t2.ID_ AND t6.TYPE_ =0)
	 <where>
	      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(calendarId)">
	        and t4.CALENDAR_ID_= #{calendarId}
	      </if>
	      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(campus)">
	        and t2.CAMPUS_= #{campus}
	      </if>
	      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(faculty)">
	        and t4.FACULTY_= #{faculty}
	      </if> 
	      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(nature)">
	        and t4.IS_ELECTIVE_= #{nature}
	      </if>
	      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(parameter)">
	         and (t4.COURSE_CODE_ like concat(#{parameter},'%') or t2.ID_ like concat(#{parameter},'%'))
	      </if>
	      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(teachingClasscode)">
	        and t2.CODE_= #{teachingClasscode}
	      </if>	      	       
	      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseName)">
	        and t4.COURSE_NAME_= #{courseName}
	      </if> 	      	       
	  </where>		   
  </select>
  <insert id="batchInsert" parameterType="java.util.List">
    insert into elc_med_withdraw_rule_ref_cour_t(
    MED_WITHDRAW_RULE_ID_,TEACHING_CLASS_ID_
    )
    values
    <foreach item="item" collection="list" index="index"
             separator=",">
      (
      #{item.medWithdrawRuleId,jdbcType=BIGINT},
      #{item.teachingClassId,jdbcType=BIGINT}
      )
    </foreach>
  </insert>
</mapper>