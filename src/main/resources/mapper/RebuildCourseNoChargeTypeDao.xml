<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.server.edu.election.dao.RebuildCourseNoChargeTypeDao">
    <resultMap id="BaseResultMap" type="com.server.edu.election.entity.RebuildCourseNoChargeType">
        <id column="ID_" jdbcType="BIGINT" property="id" />
        <result column="TRAINING_LEVEL_" jdbcType="VARCHAR" property="trainingLevel" />
        <result column="TRAINING_CATEGORY_" jdbcType="VARCHAR" property="trainingCategory" />
        <result column="ENROL_METHODS_" jdbcType="VARCHAR" property="enrolMethods" />
        <result column="SPCIAL_PLAN_" jdbcType="VARCHAR" property="spcialPlan" />
        <result column="IS_OVERSEAS_" jdbcType="VARCHAR" property="isOverseas" />
        <result column="REGISTRATION_STATUS_" jdbcType="VARCHAR" property="registrationStatus" />
    </resultMap>
    <sql id="Base_Column_List">
        ID_, TRAINING_LEVEL_, TRAINING_CATEGORY_,ENROL_METHODS_, SPCIAL_PLAN_,IS_OVERSEAS_, REGISTRATION_STATUS_
    </sql>

    <select id="findCourseNoChargeType" parameterType="com.server.edu.election.vo.RebuildCourseNoChargeTypeVo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"></include>
        from rebuild_course_nocharge_type_t
        <where>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(trainingLevel)">
                and TRAINING_LEVEL_ = #{trainingLevel}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(trainingCategory)">
                and TRAINING_CATEGORY_ = #{trainingCategory}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(enrolMethods)">
                and ENROL_METHODS_ = #{enrolMethods}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(spcialPlan)">
                and SPCIAL_PLAN_ = #{spcialPlan}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(isOverseas)">
                and IS_OVERSEAS_ = #{isOverseas}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(registrationStatus)">
                and REGISTRATION_STATUS_ = #{registrationStatus}
            </if>
        </where>
        order by ID_ DESC
    </select>

    <delete id="deleteRebuildCourseNoChargeType" parameterType="java.util.List">
        delete from rebuild_course_nocharge_type_t
        where ID_ in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="findTypeByCondition" parameterType="com.server.edu.election.entity.RebuildCourseNoChargeType" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"></include>
        from rebuild_course_nocharge_type_t
        <where>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(trainingLevel)">
                and TRAINING_LEVEL_ = #{trainingLevel}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(trainingCategory)">
                and TRAINING_CATEGORY_ = #{trainingCategory}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(enrolMethods)">
                and ENROL_METHODS_ = #{enrolMethods}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(spcialPlan)">
                and SPCIAL_PLAN_ = #{spcialPlan}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(isOverseas)">
                and IS_OVERSEAS_ = #{isOverseas}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(registrationStatus)">
                and REGISTRATION_STATUS_ = #{registrationStatus}
            </if>
        </where>
    </select>

    <select id="getAbnormalStudent" resultType="com.server.edu.election.vo.StudentRebuildFeeVo">
      select CLASS_ID_ registrationStatus,STUDENT_ID_ studentId
      from student_abnormal_apply_v
      where CLASS_ID_ in
      <foreach collection="list" item="id" open="(" close=")" separator=",">
          #{id}
      </foreach>
        and STATUS_ = 3 and EFFECTIVE_TIME_ BETWEEN (#{oneYearTime} - 365*24*60*60*1000) and #{oneYearTime}
    </select>
</mapper>