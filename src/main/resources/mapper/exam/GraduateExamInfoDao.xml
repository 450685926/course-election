<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.server.edu.exam.dao.GraduateExamInfoDao">
    <resultMap id="BaseResultMap" type="com.server.edu.exam.entity.GraduateExamInfo">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="ID_" jdbcType="BIGINT" property="id"/>
        <result column="CALENDAR_ID_" jdbcType="BIGINT" property="calendarId"/>
        <result column="COURSE_CODE_" jdbcType="VARCHAR" property="courseCode"/>
        <result column="CAMPUS_" jdbcType="VARCHAR" property="campus"/>
        <result column="EXAM_ROOMS_" jdbcType="INTEGER" property="examRooms"/>
        <result column="TOTAL_NUMBER_" jdbcType="INTEGER" property="totalNumber"/>
        <result column="ACTUAL_NUMBER_" jdbcType="INTEGER" property="actualNumber"/>
        <result column="EXAM_DATE_" jdbcType="TIMESTAMP" property="examDate"/>
        <result column="EXAM_START_TIME_" jdbcType="VARCHAR" property="examStartTime"/>
        <result column="EXAM_END_TIME_" jdbcType="VARCHAR" property="examEndTime"/>
        <result column="NOTICE_" jdbcType="INTEGER" property="notice"/>
        <result column="EXAM_STATUS_" jdbcType="INTEGER" property="examStatus"/>
        <result column="EXAM_TYPE_" jdbcType="INTEGER" property="examType"/>
        <result column="PROJ_ID_" jdbcType="VARCHAR" property="projId"/>
        <result column="CREATE_AT_" jdbcType="TIMESTAMP" property="createAt"/>
        <result column="UPDATE_AT_" jdbcType="TIMESTAMP" property="updateAt"/>
        <result column="REMARK_" jdbcType="VARCHAR" property="remark"/>
        <result column="WEEK_NUMBER_" jdbcType="INTEGER" property="weekNumber"/>
        <result column="WEEK_DAY_" jdbcType="INTEGER" property="weekDay"/>
        <result column="EXAM_TIME_" jdbcType="INTEGER" property="examTime"/>
        <result column="ClASS_NODE_" jdbcType="VARCHAR" property="classNode"/>
        <result column="ACTUAL_CALENDAR_ID_" jdbcType="BIGINT" property="actualCalendarId"/>
    </resultMap>

    <resultMap id="VoBaseResultMap" type="com.server.edu.exam.vo.GraduateExamInfoVo"
               extends="BaseResultMap"></resultMap>

    <select id="listGraduateExamInfoFinal" resultType="com.server.edu.exam.vo.GraduateExamInfoVo"
            parameterType="com.server.edu.exam.vo.GraduateExamInfoVo">
        select t1.CALENDAR_ID_ calendarId,t1.COURSE_CODE_ courseCode,t2.NAME_ courseName,t3.CAMPUS_ campus,t2.COLLEGE_ faculty,
        t2.NATURE_ nature,t2.TRAINING_LEVEL_ trainingLevel,t2.FORM_LEARNING_ formLearning,t2.CREDITS_ credits,t4.EXAM_TIME_ examTime,
        count(t1.ID_) totalNumber,t4.EXAM_ROOMS_ examRooms,t4.ACTUAL_NUMBER_ actualNumber,t4.ID_ id,t4.EXAM_DATE_ examDate,GROUP_CONCAT(DISTINCT t3.NAME_ ORDER BY t3.CODE_ asc ) teachingClassName,
        t4.EXAM_START_TIME_ examStartTime,t4.EXAM_END_TIME_ examEndTime,t4.WEEK_NUMBER_ weekNumber,t2.MANAGER_DEPT_ID_ projId,t4.REMARK_ remark,
        t4.WEEK_DAY_ weekDay,t4.ClASS_NODE_ classNode,t4.EXAM_STATUS_ examStatus,t4.NOTICE_ notice,t4.ACTUAL_CALENDAR_ID_ actualCalendarId
        from
        elc_course_takes_t_${mode} t1
        left join course_t t2 on t1.COURSE_CODE_ = t2.CODE_
        left join teaching_class_t t3 on t1.TEACHING_CLASS_ID_ = t3.ID_
        left join graduate_exam_info_t t4 on (
        t1.CALENDAR_ID_ = t4.CALENDAR_ID_
        and t1.COURSE_CODE_ = t4.COURSE_CODE_
        and t3.CAMPUS_ = t4.CAMPUS_
        and t4.EXAM_TYPE_ = 1
        )
        <where>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(campus)">
                and t3.CAMPUS_ = #{campus}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(addCourse)">
                and ( t4.EXAM_ROOMS_ = 0 or t4.EXAM_ROOMS_ is null )
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseCodes)">
                and t1.COURSE_CODE_ not in
                <foreach collection="courseCodes" item="courseCode" open="(" separator="," close=")">
                    #{courseCode}
                </foreach>
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(faculty)">
                and t2.COLLEGE_ = #{faculty}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(nature)">
                and t2.NATURE_ = #{nature}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(trainingLevel)">
                and t2.TRAINING_LEVEL_ = #{trainingLevel}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(keyword)">
                and (t2.CODE_ like concat('%',#{keyword},'%') or t2.NAME_ like concat('%',#{keyword},'%') )
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(facultys)">
                and t2.COLLEGE_ in
                <foreach collection="facultys" item="faculty" open="(" close=")" separator=",">
                    #{faculty}
                </foreach>
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(trainingLevels)">
                and t2.TRAINING_LEVEL_ in
                <foreach collection="trainingLevels" item="trainingLevel" open="(" close=")" separator=",">
                    #{trainingLevel}
                </foreach>
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseNatures)">
                and t2.NATURE_ in
                <foreach collection="courseNatures" item="courseNature" open="(" close=")" separator=",">
                    #{courseNature}
                </foreach>
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(examStatus)">
                and
                <choose>
                    <when test=" examStatus == 0 ">
                        (t4.EXAM_STATUS_ = 0 or t4.EXAM_STATUS_ is null)
                    </when>
                    <otherwise>
                        t4.EXAM_STATUS_ = #{examStatus}
                    </otherwise>
                </choose>
            </if>
            and t2.MANAGER_DEPT_ID_ = #{projId}
            and t1.CALENDAR_ID_ = #{calendarId}
        </where>
        group by
        t1.COURSE_CODE_,
        t3.CAMPUS_
        order by t4.EXAM_STATUS_ asc,t1.COURSE_CODE_ asc
    </select>

    <select id="listGraduateExamInfoMakeUp" resultType="com.server.edu.exam.vo.GraduateExamInfoVo"
            parameterType="com.server.edu.exam.vo.GraduateExamInfoVo">
        select t1.CALENDAR_ID_ calendarId,t1.COURSE_CODE_ courseCode,t2.NAME_ courseName,t3.CAMPUS_ campus,t2.COLLEGE_ faculty,
        t2.NATURE_ nature,t2.TRAINING_LEVEL_ trainingLevel,t2.CREDITS_ credits,t2.MANAGER_DEPT_ID_ projId,
        t4.ACTUAL_CALENDAR_ID_ actualCalendarId,t4.EXAM_START_TIME_ examStartTime,t4.EXAM_END_TIME_ examEndTime,t4.REMARK_ remark,
        t2.FORM_LEARNING_ formLearning,count(t1.ID_) totalNumber,t4.EXAM_ROOMS_ examRooms,t4.ACTUAL_NUMBER_ actualNumber,t4.WEEK_NUMBER_ weekNumber,t4.WEEK_DAY_ weekDay,
        t4.ID_ id,t4.EXAM_DATE_ examDate,t4.EXAM_STATUS_ examStatus,t4.EXAM_TIME_ examTime,t4.ClASS_NODE_ classNode,t4.NOTICE_ notice,GROUP_CONCAT(DISTINCT t3.NAME_ ORDER BY t3.CODE_ asc ) teachingClassName
        from
        graduate_exam_apply_examination_t t1
        left join course_t t2 on t1.COURSE_CODE_ = t2.CODE_
        left join teaching_class_t t3 on t3.ID_ = t1.TEACHING_CLASS_ID_
        left join graduate_exam_info_t t4 on (
        t1.CALENDAR_ID_ = t4.CALENDAR_ID_
        and t1.COURSE_CODE_ = t4.COURSE_CODE_
        and t3.CAMPUS_ = t4.CAMPUS_
        and t4.EXAM_TYPE_ = 2
        )
        <where>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(campus)">
                and t3.CAMPUS_ = #{campus}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(addCourse)">
                and ( t4.EXAM_ROOMS_ = 0 or t4.EXAM_ROOMS_ is null )
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseCodes)">
                and t1.COURSE_CODE_ not in
                <foreach collection="courseCodes" item="courseCode" open="(" separator="," close=")">
                    #{courseCode}
                </foreach>
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(faculty)">
                and t2.COLLEGE_ = #{faculty}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(nature)">
                and t2.NATURE_ = #{nature}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(trainingLevel)">
                and t2.TRAINING_LEVEL_ = #{trainingLevel}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(keyword)">
                and (t2.CODE_ like concat('%',#{keyword},'%') or t2.NAME_ like concat('%',#{keyword},'%') )
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(facultys)">
                and t2.COLLEGE_ in
                <foreach collection="facultys" item="faculty" open="(" close=")" separator=",">
                    #{faculty}
                </foreach>
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(trainingLevels)">
                and t2.TRAINING_LEVEL_ in
                <foreach collection="trainingLevels" item="trainingLevel" open="(" close=")" separator=",">
                    #{trainingLevel}
                </foreach>
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseNatures)">
                and t2.NATURE_ in
                <foreach collection="courseNatures" item="courseNature" open="(" close=")" separator=",">
                    #{courseNature}
                </foreach>
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(examStatus)">
                and
                <choose>
                    <when test=" examStatus == 0 ">
                        (t4.EXAM_STATUS_ = 0 or t4.EXAM_STATUS_ is null)
                    </when>
                    <otherwise>
                        t4.EXAM_STATUS_ = #{examStatus}
                    </otherwise>
                </choose>
            </if>
            and t2.MANAGER_DEPT_ID_ = #{projId}
            and t1.CALENDAR_ID_ = #{calendarId}
            and t1.APPLY_STATUS_ = 4
        </where>
        group by
        t1.COURSE_CODE_,
        t3.CAMPUS_
        order by t4.EXAM_STATUS_ asc,t1.COURSE_CODE_ asc
    </select>

  <select id="listMyExam" resultType="com.server.edu.exam.vo.MyGraduateExam" parameterType="com.server.edu.exam.vo.MyGraduateExam">
    select t1.CALENDAR_ID_ calendarId,t1.COURSE_CODE_ courseCode,t4.NAME_ courseName,t1.EXAM_DATE_ examDate,t2.ROOM_ID_ roomId,t2.ROOM_NAME_ roomName,t3.EXAM_INFO_ID_ examInfoId,
    t3.EXAM_SITUATION_ examSituation, t3.REMARK_ remark,t1.EXAM_TIME_ examTime,t3.TEACHING_CLASS_ID_ teachingClassId
    from graduate_exam_student_t t3
    left join graduate_exam_info_t t1 on t3.EXAM_INFO_ID_ = t1.ID_
    left join graduate_exam_room_t t2 on t3.EXAM_ROOM_ID_ = t2.ID_
    left join course_t t4 on t1.COURSE_CODE_ = t4.CODE_
    <where>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(calendarId)">
        and t1.CALENDAR_ID_ = #{calendarId}
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(examType)">
        and t1.EXAM_TYPE_ = #{examType}
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(studentCode)">
        and t3.STUDENT_CODE_ = #{studentCode}
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseCode)">
        and t1.COURSE_CODE_ = #{courseCode}
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(examSituation)">
        and t3.EXAM_SITUATION_ = #{examSituation}
      </if>
    </where>
  </select>

  <select id="listGraduateExamMessage" parameterType="com.server.edu.exam.query.GraduateExamMessageQuery" resultType="com.server.edu.exam.vo.GraduateExamMessage">
    select tt.CALENDAR_ID_ calendarId,tt.COURSE_CODE_ courseCode,tt.NAME_ courseName,tt.NATURE_ nature,tt.COLLEGE_ faculty,
    tt.INFO_ROOM_ID_ infoRoomId,tt.CAMPUS_ campus,tt.TRAINING_LEVEL_ trainingLevel,tt.CREDITS_ credits,tt.ROOM_ID_ roomId,
    tt.ROOM_NAME_ roomName,tt.ROOM_NUMBER_ roomNumber,tt.EXAM_INFO_ID_ examInfoId,tt.EXAM_TIME_ examTime,tt.EXAM_ROOM_ID_ examRoomId,tt.TEACHER_CODE_ teacherCode,tt.TEACHER_NAME_ teacherName
    from
    (select t1.CALENDAR_ID_,t1.COURSE_CODE_,t4.NAME_,t4.NATURE_,t4.COLLEGE_,t5.ID_ INFO_ROOM_ID_,
    t1.CAMPUS_,t4.TRAINING_LEVEL_,t4.CREDITS_,t2.ROOM_ID_,t2.ROOM_NAME_,t2.ROOM_NUMBER_,
    t1.ID_ EXAM_INFO_ID_,t1.EXAM_TIME_,t2.ID_ EXAM_ROOM_ID_,GROUP_CONCAT(t3.TEACHER_CODE_) TEACHER_CODE_,GROUP_CONCAT(t3.TEACHER_NAME_) TEACHER_NAME_
    from graduate_exam_info_t t1
    LEFT JOIN graduate_exam_info_room_t t5 on t1.ID_ = t5.EXAM_INFO_ID_
    left join graduate_exam_room_t t2 on t5.EXAM_ROOM_ID_ = t2.ID_
    left join graduate_exam_teacher_t t3 on t2.ID_ = t3.EXAM_ROOM_ID_
    left join course_t t4 on t1.COURSE_CODE_ = t4.CODE_
    <where>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(calendarId)">
        and t1.CALENDAR_ID_ = #{calendarId}
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(nature)">
        and t4.NATURE_ = #{nature}
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(faculty)">
        and t4.COLLEGE_ = #{faculty}
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(campus)">
        and t1.CAMPUS_ = #{campus}
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(trainingLevel)">
        and t4.TRAINING_LEVEL_ = #{trainingLevel}
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(roomId)">
        and t2.ROOM_ID_ = #{roomId}
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(examType)">
        and t1.EXAM_TYPE_ = #{examType}
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(projId)">
        and t1.PROJ_ID_ = #{projId}
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(facultys)">
        and t4.COLLEGE_ in
        <foreach collection="facultys" item="faculty" open="(" separator="," close=")">
          #{faculty}
        </foreach>
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(examInfoIds)">
        and t1.ID_ in
        <foreach collection="examInfoIds" item="examInfoId" open="(" separator="," close=")">
          #{examInfoId}
        </foreach>
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(examStartTime)">
        <![CDATA[ and DATE_FORMAT(t1.EXAM_DATE_,'%Y-%m-%d') = DATE_FORMAT(#{examStartTime},'%Y-%m-%d')]]>
      </if>
      and t1.EXAM_STATUS_ = 2
    </where>
    GROUP BY t1.ID_,t2.ID_
    ) as tt
    <where>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(keyword)">
        and (tt.COURSE_CODE_ like concat ('%', #{keyword},'%') or tt.NAME_ like concat ('%', #{keyword},'%')
        or tt.TEACHER_NAME_ like concat ('%', #{keyword},'%') or tt.TEACHER_CODE_ like concat ('%', #{keyword},'%'))
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(teacherCode)">
        and (tt.TEACHER_CODE_ like concat ('%', #{teacherCode},'%'))
      </if>
    </where>
  </select>

    <select id="ListCourse" resultType="com.server.edu.exam.dto.SelectDto"
            parameterType="com.server.edu.exam.dto.SelectDto">
        select  t1.COURSE_CODE_ courseCode,t2.NAME_ courseName ,GROUP_CONCAT(t1.ID_) examInfoIds
        from graduate_exam_info_t t1
        left join course_t t2 on t1.COURSE_CODE_ = t2.CODE_
        <where>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(calendarId)">
                and t1.CALENDAR_ID_ = #{calendarId}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(examType)">
                and t1.EXAM_TYPE_ = #{examType}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(projId)">
                and t1.PROJ_ID_ = #{projId}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(keyword)">
                and (t2.CODE_ like concat ('%',#{keyword},'%') or t2.NAME_ like concat ('%',#{keyword},'%'))
            </if>
            and t1.EXAM_STATUS_ >= 1
        </where>
        GROUP BY t1.COURSE_CODE_
    </select>

    <select id="listExamStudent" parameterType="com.server.edu.exam.query.GraduateExamStudentQuery"
            resultType="com.server.edu.exam.dto.GraduateExamStudentDto">
        SELECT t1.ID_ examStudentId,t1.STUDENT_CODE_ studentCode,t5.NAME_ studentName,t3.COURSE_CODE_
        courseCode,t4.NAME_ courseName,t3.ID_ examInfoId,t3.CAMPUS_ campus,GROUP_CONCAT(t6.TEACHER_NAME_) teacherName,
        t3.CALENDAR_ID_ calendarId,t3.EXAM_TIME_ examTime,t3.EXAM_TYPE_ examType,
        t2.ID_ examRoomId,t2.ROOM_ID_ roomId,t2.ROOM_NAME_ roomName,t1.EXAM_SITUATION_
        examSituation,t1.TEACHING_CLASS_CODE_ teachingClassCode,t1.TEACHING_CLASS_ID_ teachingClassId,t1.REMARK_ remark
        FROM
        graduate_exam_student_t t1
        LEFT JOIN graduate_exam_room_t t2 ON t1.EXAM_ROOM_ID_ = t2.ID_
        LEFT JOIN graduate_exam_info_t t3 ON t1.EXAM_INFO_ID_ = t3.ID_
        LEFT JOIN course_t t4 ON t3.COURSE_CODE_ = t4.CODE_
        LEFT JOIN student_t t5 ON t1.STUDENT_CODE_ = t5.STUDENT_CODE_
        left join teaching_class_teacher_t t6 on t1.TEACHING_CLASS_ID_ = t6.TEACHING_CLASS_ID_
        <where>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(calendarId)">
                and t3.CALENDAR_ID_ = #{calendarId}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(examType)">
                and t3.EXAM_TYPE_ = #{examType}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(projId)">
                and t3.PROJ_ID_ = #{projId}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(campus)">
                and t3.CAMPUS_ = #{campus}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(roomId)">
                and t2.ROOM_ID_ = #{roomId}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(examSituation)">
                and t1.EXAM_SITUATION_ = #{examSituation}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(examStudentIds)">
                and t1.ID_ in
                <foreach collection="examStudentIds" item="examStudentId" open="(" separator="," close=")">
                    #{examStudentId}
                </foreach>
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(keyword)">
                and (t5.STUDENT_CODE_ like concat('%',#{keyword},'%') or t5.NAME_ like concat('%',#{keyword},'%')
                or t4.CODE_ like concat('%',#{keyword},'%') or t4.NAME_ like concat('%',#{keyword},'%'))
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(examStartTime)">
                <![CDATA[ and DATE_FORMAT(t3.EXAM_DATE_,'%Y-%m-%d') = DATE_FORMAT(#{examStartTime},'%Y-%m-%d') ]]>
            </if>
            and t3.EXAM_STATUS_ = 2
        </where>
        GROUP BY t1.ID_
    </select>

    <select id="findStudentElcCourseTake" resultType="com.server.edu.exam.dto.ExamStudentAddDto"
            parameterType="com.server.edu.exam.dto.ExamStudentAddDto">
    select t1.STUDENT_ID_ studentCode,t1.TEACHING_CLASS_ID_ teachingClassId,t2.CODE_ teachingClassCode,t2.NAME_ teachingClassName
    from elc_course_takes_t t1
    left join teaching_class_t t2 on t2.ID_ = t1.TEACHING_CLASS_ID_
    <where>
        t1.STUDENT_ID_ = #{studentCode} and t1.CALENDAR_ID_ = #{calendarId} and t1.COURSE_CODE_ = #{courseCode}

        <if test=" examType == 1 ">
            and t1.STUDENT_ID_ not in (
            select t3.STUDENT_ID_ from score_student_result_t t3 where t3.CALENDAR_ID_ = #{calendarId} and t3.STUDENT_ID_ = #{studentCode} and t3.COURSE_CODE_ = #{courseCode} and t3.RELEASE_TYPE_ = 1
            )
        </if>
    </where>
  </select>

    <select id="findStudentByInfoId" resultType="int" >
    select COUNT(*) from   graduate_exam_student_t t1
    left join graduate_exam_info_t t2 on t1.EXAM_INFO_ID_ = t2.ID_
    where t2.CALENDAR_ID_ = #{calendarId} and t2.COURSE_CODE_ = #{courseCode} and STUDENT_CODE_ = #{studentCode} and EXAM_SITUATION_ = 1
  </select>

    <select id="getExamRoomByExamInfoId" resultType="com.server.edu.exam.dto.ExamRoomDto"
            parameterType="java.lang.Long">
    SELECT
	t1.CAMPUS_ campus,
	t1.EXAM_TIME_ examTime,
	t3.ID_ examRoomId,
	t3.ROOM_ID_ roomId,
	t3.ROOM_NAME_ roomName,
	t3.ROOM_CAPACITY_ roomCapacity,
	t3.ROOM_NUMBER_ roomNumber,
    t1.ID_ examInfoId
    FROM
        graduate_exam_info_t t1
    LEFT JOIN graduate_exam_info_room_t t2 ON t1.ID_ = t2.EXAM_INFO_ID_
    LEFT JOIN graduate_exam_room_t t3 ON t3.ID_ = t2.EXAM_ROOM_ID_
    WHERE
	t1.ID_ in
	<foreach collection="list" item="examInfoId" open="(" close=")" separator=",">
        #{examInfoId}
    </foreach>
  </select>

    <select id="listExamInfos" resultType="com.server.edu.exam.dto.ExamInfoRoomDto">
        SELECT EXAM_INFO_ID_ examInfoId,COUNT(ID_) examRooms FROM graduate_exam_info_room_t
        where EXAM_ROOM_ID_ in
        <foreach collection="list" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
        GROUP BY EXAM_INFO_ID_
    </select>

    <update id="updateExamInfoExamRooms" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update graduate_exam_info_t set EXAM_ROOMS_ = EXAM_ROOMS_ - #{item.examRooms} where ID_ = #{item.examInfoId}
        </foreach>
    </update>

    <update id="updateActualNumber" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update graduate_exam_info_t set ACTUAL_NUMBER_ = ACTUAL_NUMBER_
            <if test=" symbol == 1 ">
                +
            </if>
            <if test=" symbol == 0 ">
                -
            </if>
            #{item.actualNumber} where ID_ = #{item.examInfoId}
        </foreach>
    </update>

    <update id="updateActualNumberById">
        update graduate_exam_info_t set ACTUAL_NUMBER_ = ACTUAL_NUMBER_
        <if test=" symbol == 1 ">
            +
        </if>
        <if test=" symbol == 0 ">
            -
        </if>
        1 where ID_ = #{examInfoId}
    </update>

    <select id="listExamStus" parameterType="java.lang.Long" resultType="com.server.edu.exam.vo.ExamStudent">
    SELECT
	  @i :=@i + 1 as orderStu,
      t.*
    FROM
      (
        SELECT
          t3.CALENDAR_ID_ calendarId,
          t3.COURSE_CODE_ courseCode,
          t4.NAME_ courseName,
          t1.ROOM_NAME_ roomName,
          t2.TEACHING_CLASS_CODE_ teachingClassCode,
          t2.TEACHING_CLASS_NAME_ teachingClassName,
          t2.STUDENT_CODE_ studentCode,
          t5.NAME_ studentName,
          t5.FACULTY_ faculty,
          t3.EXAM_DATE_ examDate,
          t3.EXAM_START_TIME_ examStartTime,
          t3.EXAM_END_TIME_ examEndTime,
          t3.ID_ examInfoId
        FROM
          graduate_exam_room_t t1
        LEFT JOIN graduate_exam_student_t t2 ON t1.ID_ = t2.EXAM_ROOM_ID_
        LEFT JOIN graduate_exam_info_t t3 ON t2.EXAM_INFO_ID_ = t3.ID_
        LEFT JOIN course_t t4 ON t3.COURSE_CODE_ = t4.CODE_
        LEFT JOIN student_t t5 ON t5.STUDENT_CODE_ = t2.STUDENT_CODE_
        WHERE
           t1.ID_ = #{id} and t2.EXAM_SITUATION_ = 1
          ORDER BY t3.COURSE_CODE_ asc ,t2.TEACHING_CLASS_CODE_ asc
      ) t,
     (SELECT @i := 0) d
  </select>

    <select id="getExamInfoNumber" parameterType="java.util.List"
            resultType="com.server.edu.exam.dto.GraduateExamStudentNumber">
        select SUM(TOTAL_NUMBER_) totalNumber,SUM(ACTUAL_NUMBER_) actualNumber
        from graduate_exam_info_t
        where ID_ in
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="getExamRoomIds" resultType="java.lang.Long">
      SELECT
	   DISTINCT
	   r.ID_
      FROM
	   graduate_exam_info_t i
      JOIN graduate_exam_info_room_t t ON i.ID_ = t.EXAM_INFO_ID_
      JOIN graduate_exam_room_t r ON r.ID_ = t.EXAM_ROOM_ID_
	  WHERE
          i.CALENDAR_ID_ = #{calendarId} and i.EXAM_TYPE_ = #{examType} and i.PROJ_ID_ = #{projId}
    </select>

    <select id="checkPublicExamTimeSame" parameterType="com.server.edu.exam.entity.GraduateExamInfo" resultMap="BaseResultMap">
        select t1.* from
        graduate_exam_info_t t1
        left join course_t t2 on t1.COURSE_CODE_ = t2.CODE_
        where t1.CALENDAR_ID_ = #{calendarId} and t1.COURSE_CODE_ = #{courseCode} and t1.EXAM_TYPE_ = #{examType}
        and t2.NATURE_ = 1 and t1.PROJ_ID_ = #{projId}
    </select>

    <select id="findCourse" parameterType="java.util.List" resultType="com.server.edu.exam.dto.SelectDto">
        select t1.COURSE_CODE_ courseCode,t2.NAME_ courseName from graduate_exam_info_t t1
        left join course_t t2 on t1.COURSE_CODE_ = t2.CODE_
        where t1.ID_ in
        <foreach collection="list" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </select>

</mapper>