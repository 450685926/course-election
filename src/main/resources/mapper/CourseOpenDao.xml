<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.server.edu.election.dao.CourseOpenDao">
  <resultMap id="BaseResultMap" type="com.server.edu.election.entity.CourseOpen">
    <id column="ID_" jdbcType="BIGINT" property="id" />
    <result column="CALENDAR_ID_" jdbcType="BIGINT" property="calendarId" />
    <result column="COURSE_CODE_" jdbcType="VARCHAR" property="courseCode" />
    <result column="COURSE_NAME_" jdbcType="VARCHAR" property="courseName" />
    <result column="COURSE_NAME_EN_" jdbcType="VARCHAR" property="courseNameEn" />
    <result column="IS_ELECTIVE_" jdbcType="INTEGER" property="isElective" />
    <result column="FACULTY_" jdbcType="VARCHAR" property="faculty" />
    <result column="TERM_" jdbcType="VARCHAR" property="term" />
    <result column="CROSS_TERM_" jdbcType="INTEGER" property="crossTerm" />
    <result column="TRAINING_LEVEL_" jdbcType="VARCHAR" property="trainingLevel" />
    <result column="FORM_LEARNING_" jdbcType="VARCHAR" property="formLearning" />
    <result column="NATURE_" jdbcType="VARCHAR" property="nature" />
    
    <result column="PERIOD_" jdbcType="DOUBLE" property="period" />
    <result column="CREDITS_" jdbcType="DOUBLE" property="credits" />
    <result column="NUMBER_" jdbcType="INTEGER" property="number" />
    <result column="IS_OPEN_" jdbcType="INTEGER" property="isOpen" />
    <result column="REMARK_" jdbcType="VARCHAR" property="remark" />
    <result column="CREATED_AT_" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="UPDATED_AT_" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <resultMap id="affinityMap" type="com.server.edu.election.vo.CourseOpenVo" extends="com.server.edu.election.dao.CourseOpenDao.BaseResultMap">
     <result column="courseId" jdbcType="BIGINT" property="courseId" />
     <result column="suggestStatus" jdbcType="INTEGER" property="suggestStatus" />
	  <result column="teachingClassId" jdbcType="BIGINT" property="teachingClassId" />
	  <result column="teachingClassCode" jdbcType="VARCHAR" property="teachingClassCode" />
  </resultMap>
  <select id="selectCourseList" parameterType="com.server.edu.election.entity.CourseOpen" resultMap="affinityMap">
	  SELECT DISTINCT
	  t4.ID_ teachingClassId,
	  t1.COURSE_CODE_,
	  t4.CODE_ teachingClassCode,
	  t1.COURSE_NAME_,
	  t1.TRAINING_LEVEL_,
	  t1.CREDITS_,
	  t1.PERIOD_,
	  t1.FACULTY_
	  FROM
	  course_open_t t1
	  JOIN teaching_task_t t3 ON t3.COURSE_OPEN_ID_ = t1.ID_
	  JOIN teaching_class_t t4 ON (t4.TASK_ID_ = t3.ID_ and t4.DELETE_STATUS_ =0)
	  LEFT JOIN courses_label_t CL ON t4.COURSE_LABEL_ID_ = CL.ID_
	  WHERE
	  t1.CALENDAR_ID_ = #{calendarId}
	  and t1.IS_OPEN_ = 1 and t1.DELETE_STATUS_ = 0
	  and t1.PROJ_ID_ = 1
	  and t4.DEPLOY_FLAG_ &gt; 0
	  and t4.ID_ NOT IN (
	  select t.TEACHING_CLASS_ID_ from elc_affinity_courses_t t where t.CALENDAR_ID_ = #{calendarId}
	  )
	  <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseCode)">
		  and t4.CODE_ like concat('%',#{courseCode},'%')
	  </if>
	  <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseName)">
		  and t1.COURSE_NAME_ like concat('%',#{courseName},'%')
	  </if>
	  GROUP BY t4.ID_
	  order by t4.ID_
  </select>
  <select id="selectCourseSuggestSwitch" parameterType="com.server.edu.election.dto.CourseOpenDto" resultMap="affinityMap">
    SELECT DISTINCT * from (
		SELECT
		    t1.ID_,
			t1.COURSE_CODE_,
			t1.COURSE_NAME_,
			t1.COURSE_NAME_EN_,
			t1.TRAINING_LEVEL_,
			t1.CREDITS_,
			t1.PERIOD_,
		    IFNULL(t2.ID_,0) suggestStatus
		FROM
			course_open_t t1
		LEFT JOIN elc_course_suggest_switch_t t2 ON t1.COURSE_CODE_ = t2.COURSE_CODE_
		<where>
			and t1.IS_OPEN_ = 1 and t1.DELETE_STATUS_ = 0
			<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(calendarId)">
		        and t1.CALENDAR_ID_  = #{calendarId}
		    </if>
		    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(keyWord)">
		        and (t1.COURSE_CODE_ like concat(#{keyWord},'%') or t1.COURSE_NAME_ like concat(#{keyWord},'%') or t1.COURSE_NAME_EN_ like concat(#{keyWord},'%'))
		    </if>
		    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(trainingLevel)">
		        and t1.TRAINING_LEVEL_  = #{trainingLevel}
		    </if>
		    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(faculty)">
		        and t1.FACULTY_  = #{faculty}
		    </if>
		    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(nature)">
		        and t1.NATURE_  = #{nature}
		    </if>
		    <if test="credits !=null and credits !=0">
		        and t1.CREDITS_  = #{credits}
		    </if>
		    <if test="period !=null and period !=0">
		        and t1.PERIOD_  = #{period}
		    </if>
		    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(projectId)">
		        and t1.PROJ_ID_  = #{projectId}
		    </if>
			<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courses)">
		        and t1.COURSE_CODE_ in
		        <foreach item="courseCode" collection="courses" index="index" open="(" separator="," close=")">
		          #{courseCode}
		        </foreach>
		     </if>
		</where>
		)t3 
		<where>
		    <if test="suggestStatus !=null and suggestStatus ==0">
		        and t3.suggestStatus  = 0
		    </if>
		    <if test="suggestStatus !=null and suggestStatus ==1">
		        and t3.suggestStatus  &gt; 0
		    </if>
		</where>
  </select>

	<select id="queryNameAndTrainingLevelByCode" parameterType="java.lang.String" resultMap="BaseResultMap">
		SELECT CODE_ COURSE_CODE_,NAME_ COURSE_NAME_,NAME_EN_ COURSE_NAME_EN_,TRAINING_LEVEL_ FROM course_t where CODE_ = #{courseCode}
	</select>

	<select id="findFailedCourseInfo" resultType="com.server.edu.election.vo.FailedCourseVo">
		select
			a.CALENDAR_ID_ calendarId,a.IS_OPEN_ isOpen,a.COURSE_CODE_ courseCode,
			a.COURSE_NAME_ courseName, a.TRAINING_LEVEL_ trainingLevel,a.CREDITS_ credits,
			b.NATURE_ nature,b.ASSESSMENT_MODE_ assessmentMode
		from course_open_t a
		join course_t b on b.CODE_ = a.COURSE_CODE_
		where a.COURSE_CODE_ in
		<foreach item="item" collection="courseCodes" separator="," open="(" close=")" >
			#{item}
		</foreach>
		and a.CALENDAR_ID_ = #{calendarId}
		and a.PROJ_ID_ = #{projectId}
		and a.DELETE_STATUS_ = 0
	</select>

	<select id="findRebuildCourses" resultType="com.server.edu.election.vo.RebuildCourseVo">
		select
			a.COURSE_CODE_ courseCode,a.COURSE_NAME_ courseName,a.FACULTY_ faculty,a.CREDITS_ credits,
			c.ID_ teachingClassId,c.CODE_ classCode,c.CAMPUS_ campus,c.REMARK_ remark,
			c.ELC_NUMBER_ selectNumber,c.NUMBER_ number
		from course_open_t a
		join teaching_task_t b on a.ID_ = b.COURSE_OPEN_ID_
		join teaching_class_t c on b.ID_ = c.TASK_ID_
		where a.COURSE_CODE_ in
		<foreach item="item" collection="courseCodes" separator="," open="(" close=")" >
			#{item}
		</foreach>
		and a.CALENDAR_ID_ = #{calendarId}
		and a.PROJ_ID_ = #{projectId}
		and a.DELETE_STATUS_ = 0
		and c.MAN_ARRANGE_FLAG_ in (1,2,3)
		<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(keyWord)">
			and (a.COURSE_NAME_ like CONCAT('%', #{keyWord}, '%') or c.CODE_ like CONCAT(#{keyWord}, '%'))
		</if>
		group by c.ID_
	</select>

	<select id="findClassInfo" resultType="com.server.edu.election.studentelec.cache.TeachingClassCache">
		SELECT
			t1.ID_ teachClassId,
			t1.CODE_ teachClassCode,
			t1.NAME_ teachClassName,
			t1.REMARK_ remark,
			t3.FACULTY_ faculty,
			t3.NATURE_ nature,
			t3.TERM_ term,
			GROUP_CONCAT(t4.TEACHER_NAME_) teacherName
		FROM
			teaching_class_t t1
			JOIN teaching_task_t t2 ON t1.TASK_ID_ = t2.ID_
			JOIN course_open_t t3 ON t2.COURSE_OPEN_ID_ = t3.ID_
			JOIN teaching_class_teacher_t t4 ON t1.ID_ = t4.TEACHING_CLASS_ID_
		WHERE
		    t3.DELETE_STATUS_ = 0 and
			t1.ID_ in
		<foreach item="item" collection="teachClassIds" separator="," open="(" close=")" >
			#{item}
		</foreach>
		group by t1.ID_
	</select>
</mapper>