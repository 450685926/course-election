<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.server.edu.election.dao.ElcAffinityCoursesStdsDao">
  <resultMap id="BaseResultMap" type="com.server.edu.election.entity.ElcAffinityCoursesStds">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="COURSE_ID_" jdbcType="BIGINT" property="courseId" />
    <id column="STUDENT_ID_" jdbcType="VARCHAR" property="studentId" />
  </resultMap>
  
  <insert id="batchInsert" parameterType="java.util.List">
    insert into elc_affinity_courses_stds_t(
    COURSE_ID_,STUDENT_ID_
    )
    values
    <foreach item="item" collection="list" index="index"
             separator=",">
      (
      #{item.courseId},
      #{item.studentId}
      )
    </foreach>
  </insert>
  <select id="getStudentByCourseId" resultType="com.server.edu.election.vo.ElcAffinityCoursesStdsVo">
		SELECT DISTINCT
			t1.STUDENT_ID_ studentId,
			t1.COURSE_ID_ courseId,
			t2.CODE_ courseCode,
			t2.NAME_ courseName
		FROM
			elc_affinity_courses_stds_t t1
		JOIN course_t t2 ON t1.COURSE_ID_ = t2.ID_
		<where>
		    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseCode)">
		        and t2.CODE_ =#{courseCode}
		    </if>
		</where>
  </select>
  
  <select id="getAllElcAffinityStudents" resultType="com.server.edu.election.vo.ElcAffinityCoursesStdsVo">
		SELECT DISTINCT
			t1.STUDENT_ID_ studentId,
			t1.COURSE_ID_ courseId,
			t2.CODE_ courseCode,
			t2.NAME_ courseName
		FROM
			elc_affinity_courses_stds_t t1
		JOIN course_t t2 ON t1.COURSE_ID_ = t2.ID_
  </select>
</mapper>