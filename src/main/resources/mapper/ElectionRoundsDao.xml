<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.server.edu.election.dao.ElecRoundsDao">
  <resultMap id="BaseResultMap" type="com.server.edu.election.entity.ElectionRounds">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="ID_" jdbcType="BIGINT" property="id" />
    <result column="CALENDAR_ID_" jdbcType="BIGINT" property="calendarId" />
    <result column="TURN_" jdbcType="INTEGER" property="turn" />
    <result column="ELECTION_OBJ_" jdbcType="VARCHAR" property="electionObj" />
    <result column="MODE_" jdbcType="INTEGER" property="mode" />
    <result column="MANAGER_DEPT_ID_" jdbcType="VARCHAR" property="projectId" />
    <result column="NAME_" jdbcType="VARCHAR" property="name" />
    <result column="OPEN_FLAG_" jdbcType="INTEGER" property="openFlag" />
    <result column="BEGIN_TIME_" jdbcType="TIMESTAMP" property="beginTime" />
    <result column="END_TIME_" jdbcType="TIMESTAMP" property="endTime" />
    <result column="REMARK_" jdbcType="VARCHAR" property="remark" />
    <result column="CREATED_AT_" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="UPDATED_AT_" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="DELETE_STATUS_" jdbcType="INTEGER" property="deleteStatus" />
  </resultMap>
  
  <resultMap id="DtoBaseResultMap" type="com.server.edu.election.dto.ElectionRoundsDto" extends="BaseResultMap"></resultMap>
  
  <select id="listPage" resultMap="BaseResultMap">
  	select * from election_rounds_t 
  	<where>
  		MANAGER_DEPT_ID_ = #{round.projectId}
  		and CALENDAR_ID_ = #{round.calendarId}
  		and MODE_ = #{round.mode}
  		<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(round.electionObj)">
  		and ELECTION_OBJ_ = #{round.electionObj}
  		</if>
  		and (DELETE_STATUS_ = '0' or DELETE_STATUS_ is null)
  	</where>
  </select>
  
  <select id="getOne" resultMap="DtoBaseResultMap">
  	select * from election_rounds_t where ID_ = #{roundId}
  </select>
  
  <insert id="saveRoundRefRule">
  	insert into election_rounds_ref_rule_t(ROUNDS_ID_, RULE_ID_) values(#{roundId}, #{ruleId})
  </insert>
  
  <delete id="deleteAllRefRule">
  	delete from election_rounds_ref_rule_t where ROUNDS_ID_ = #{roundId}
  </delete>
  
  <select id="listAllRefRuleId" resultType="long">
  	select ref.RULE_ID_ 
  	from election_rounds_ref_rule_t ref 
  	     left join election_rule_t rule on ref.RULE_ID_ = rule.ID_  
  	where ref.ROUNDS_ID_ = #{roundId}
  	      and rule.STATUS_ = 1
  </select>
  
  <select id="selectWillBeStart" resultMap="BaseResultMap">
  	select * from election_rounds_t where DATE_ADD(sysdate(),INTERVAL 1 HOUR) BETWEEN BEGIN_TIME_ and END_TIME_ and OPEN_FLAG_ = 1 and DELETE_STATUS_ = '0'
  </select>
  
  <select id="selectWillBeStartByCalendarId" resultMap="BaseResultMap">
  	select * from election_rounds_t 
  	<where>  
  		DATE_ADD(sysdate(),INTERVAL 1 HOUR) BETWEEN BEGIN_TIME_ and END_TIME_
  		and OPEN_FLAG_ = 1 
  		and DELETE_STATUS_ = '0'
  		<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(calendarId)">
                and CALENDAR_ID_ =#{calendarId}
        </if>
  	</where>
  </select>
  
    <select id="findElectCourseList" parameterType="com.server.edu.election.dto.ReportManagementCondition" resultType="com.server.edu.election.dto.StudentSelectCourseList">
        select tt.CALENDAR_ID_ calendarId,tt.STUDENT_ID_ studentCode,tt.NAME_ name,tt.GRADE_ grade,tt.TRAINING_LEVEL_ trainingLevel,tt.CAMPUS_ campus,tt.FACULTY_ faculty,tt.PROFESSION_ profession,tt.REGISTRATION_STATUS_ registrationStatus,
        yy.COURSE_CODE_ courseCode,yy.COURSE_NAME courseName,yy.CLASS_CODE_ classCode,yy.COURSE_TAKE_TYPE_ isRebuildCourse,yy.NATURE_ nature from (SELECT CALENDAR_ID_, st.STUDENT_ID_,t1.NAME_,t1.GRADE_,t1.TRAINING_LEVEL_,t1.CAMPUS_,t1.FACULTY_,t1.PROFESSION_,t1.REGISTRATION_STATUS_ FROM `election_rounds_t` ro
        LEFT JOIN election_rounds_stu_t st on ro.ID_=st.ROUNDS_ID_
        LEFT JOIN student_t t1 on t1.STUDENT_CODE_=st.STUDENT_ID_
        <where>
            CALENDAR_ID_=#{calendarId}
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(grade)">
                and t1.GRADE_=#{grade}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(faculty)">
                and t1.FACULTY_=#{faculty}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(profession)">
                and t1.PROFESSION_=#{profession}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(trainingLevel)">
                and t1.TRAINING_LEVEL_=#{trainingLevel}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(campus)">
                and t1.CAMPUS_=#{campus}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(registrationStatus)">
                and t1.REGISTRATION_STATUS_=#{registrationStatus}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(trainingCategory)">
                and t1.TRAINING_CATEGORY_=#{trainingCategory}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(formLearning)">
                and t1.FORM_LEARNING_=#{formLearning}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(enrolSeason)">
                and t1.ENROL_SEASON_=#{enrolSeason}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(isOverseas)">
                and t1.IS_OVERSEAS_=#{isOverseas}
            </if>
        </where>
        GROUP BY st.STUDENT_ID_) tt
        LEFT JOIN (select ta.STUDENT_ID_,co.CODE_ COURSE_CODE_,co.NAME_ COURSE_NAME,cl.CODE_ CLASS_CODE_,ta.COURSE_TAKE_TYPE_,co.NATURE_ from elc_course_takes_t ta
        LEFT JOIN course_t co on co.CODE_=ta.COURSE_CODE_
        LEFT JOIN teaching_class_t cl on cl.ID_=ta.TEACHING_CLASS_ID_
        where CALENDAR_ID_=#{calendarId}) yy on tt.STUDENT_ID_=yy.STUDENT_ID_
        <where>
            <!--<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(nature)">
                and yy.NATURE_=#{nature}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(isRebuildCourse)">
                and yy.COURSE_TAKE_TYPE_=#{isRebuildCourse}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(electCourseStatus)">
               <choose>
                   <when test="electCourseStatus==0">
                       and yy.CLASS_CODE_ is NULL
                   </when>
                   <otherwise>
                       and yy.CLASS_CODE_ is not NULL
                   </otherwise>
               </choose>
            </if>-->
            yy.CLASS_CODE_ is NULL
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(condition)">
                and (tt.STUDENT_ID_ like concat('%',#{condition},'%') or tt.NAME_ like concat('%',#{condition},'%'))
            </if>
        </where>
    </select>
    <select id="getRoundByTeachClassId" resultMap="BaseResultMap">
	  	select * from election_rounds_t t
	  	    left join election_rounds_cour_t c on c.ROUNDS_ID_ = t.ID_ 
	  	<where>
	  	    c.TEACHING_CLASS_ID_ = #{teachClassId}  
	  	</where>
  	</select>
    
</mapper>