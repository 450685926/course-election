<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.server.edu.election.dao.TeachingClassDao">
  <resultMap id="BaseResultMap" type="com.server.edu.election.entity.TeachingClass">
    <id column="ID_" jdbcType="BIGINT" property="id" />
    <result column="TASK_ID_" jdbcType="BIGINT" property="taskId" />
    <result column="CODE_" jdbcType="VARCHAR" property="code" />
    <result column="IS_MEDIA_" jdbcType="INTEGER" property="isMedia" />
    <result column="ROOM_TYPE_" jdbcType="VARCHAR" property="roomType" />
    <result column="TEACHING_LANGUAGE_" jdbcType="VARCHAR" property="teachingLanguage" />
    <result column="COURSE_LABEL_ID_" jdbcType="BIGINT" property="courseLabelId" />
    <result column="ASSESSMENT_MODE_" jdbcType="VARCHAR" property="assessmentMode" />
    <result column="PERIOD_" jdbcType="DOUBLE" property="period" />
    <result column="ARRANGE_MODE_" jdbcType="VARCHAR" property="arrangeMode" />
    <result column="WEEK_HOUR_" jdbcType="DOUBLE" property="weekHour" />
    <result column="CLASS_HOUR_" jdbcType="DOUBLE" property="classHour" />
    <result column="MEDIA_HOUR_" jdbcType="DOUBLE" property="mediaHour" />
    <result column="START_WEEK_" jdbcType="INTEGER" property="startWeek" />
    <result column="END_WEEK_" jdbcType="INTEGER" property="endWeek" />
    <result column="TOTAL_WEEK_" jdbcType="INTEGER" property="totalWeek" />
    <result column="CAMPUS_" jdbcType="VARCHAR" property="campus" />
    <result column="CLASS_TYPE_" jdbcType="VARCHAR" property="classType" />
    <result column="NUMBER_" jdbcType="INTEGER" property="number" />
    <result column="ELC_NUMBER_" jdbcType="INTEGER" property="elcNumber" />
    <result column="PRE_ARRANGE_FLAG_" jdbcType="INTEGER" property="preArrangeFlag" />
    <result column="MAN_ARRANGE_FLAG_" jdbcType="INTEGER" property="manArrangeFlag" />
    <result column="DEPLOY_FLAG_" jdbcType="INTEGER" property="deployFlag" />
    <result column="REMARK_" jdbcType="VARCHAR" property="remark" />
    <result column="CREATED_AT_" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="UPDATED_AT_" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  
  <resultMap type="com.server.edu.election.vo.TeachingClassVo" id="TeachingClassVoMap" extends="BaseResultMap">
  	<result column="COURSE_NAME_" jdbcType="VARCHAR" property="courseName" />
  	<result column="COURSE_CODE_" jdbcType="VARCHAR" property="courseCode" />
  	<result column="CREDITS_" jdbcType="DOUBLE" property="credits" />
  </resultMap>
  <select id="listPage" parameterType="com.server.edu.election.query.ElcResultQuery" resultMap="TeachingClassVoMap">
    select t1.*, t2.CAMPUS_, t3.COURSE_CODE_, t3.COURSE_NAME_, t3.CREDITS_ from 
	teaching_class_t t1 
	join teaching_task_t t2 ON t2.ID_ = t1.TASK_ID_
	join course_open_t t3 ON t3.ID_ = t2.COURSE_OPEN_ID_
	left join teaching_class_teacher_t t4 on (t4.TYPE_=0 and t4.TEACHING_CLASS_ID_ =t1.ID_)
    <where>
      t3.CALENDAR_ID_ = #{calendarId}
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(teachingClassCode)">
        and t1.CODE_ = #{teachingClassCode,jdbcType=VARCHAR}
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseLabelId)">
        and t1.COURSE_LABEL_ID_ = #{courseLabelId}
      </if>
      <if test="actualAndUpper != null and actualAndUpper !=0 and actualAndUpper==1">
        and t1.ELC_NUMBER_ &gt; t1.NUMBER_
      </if>
      <if test="actualAndUpper != null and actualAndUpper !=0 and actualAndUpper==2">
        and t1.ELC_NUMBER_ &lt; t1.NUMBER_
      </if>
      <if test="actualAndUpper != null and actualAndUpper !=0 and actualAndUpper==3">
        and t1.ELC_NUMBER_ = t1.NUMBER_
      </if>
      <if test="minUpperNumber != null and minUpperNumber !=0">
        and t1.NUMBER_ &gt; #{minUpperNumber}
      </if>
      <if test="maxUpperNumber != null and maxUpperNumber !=0">
        and t1.NUMBER_ &lt; #{maxUpperNumber}
      </if>
       <if test="minActualNumber != null and minActualNumber !=0">
        and t1.ELC_NUMBER_ &gt; #{minActualNumber}
      </if>
      <if test="maxActualNumber != null and maxActualNumber !=0">
        and t1.ELC_NUMBER_ &lt; #{maxActualNumber}
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(manArrangeFlag)">
        and t1.MAN_ARRANGE_FLAG_ = #{manArrangeFlag}
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseCode)">
        and t3.COURSE_CODE_ = #{courseCode}
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseName)">
        and t3.COURSE_NAME_ = #{courseName}
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(campus)">
        and t2.CAMPUS_ = #{campus}
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(projectId)">
        and t3.PROJ_ID_ = #{projectId}
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(faculty)">
        and t3.FACULTY_ = #{faculty}
      </if>
      <if test="credits!=null and credits!=0">
        and t3.CREDITS_ = #{credits}
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(keyword)">
  		and (t1.CODE_ like CONCAT(#{keyword}, '%') or t3.COURSE_CODE_ like CONCAT(#{keyword}, '%') OR t3.COURSE_NAME_ like CONCAT(#{keyword}, '%'))
  		</if>
  	   <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(teacherCode)">
  	      and t4.TEACHER_CODE_ = #{teacherCode}
  		</if>
    </where>
  </select>
  
    <select id="findTeachingClass" parameterType="com.server.edu.election.query.ElcResultQuery" resultMap="TeachingClassVoMap">
    select t1.*, t2.CAMPUS_, t3.COURSE_CODE_, t3.COURSE_NAME_, t3.CREDITS_ from 
	teaching_class_t t1 
	join teaching_task_t t2 ON t2.ID_ = t1.TASK_ID_
	join course_open_t t3 ON t3.ID_ = t2.COURSE_OPEN_ID_
    <where>
     <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(calendarId)">
        t3.CALENDAR_ID_ = #{calendarId}
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(teachingClassId)">
        and t1.ID_ = #{teachingClassId}
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(teachingClassIds)">
        and t1.ID_ in 
         <foreach collection="teachingClassIds" open="(" separator="," close=")" item="id">
            #{id}
         </foreach>
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(teachingClassCode)">
        and t1.CODE_ = #{teachingClassCode,jdbcType=VARCHAR}
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(manArrangeFlag)">
        and t1.MAN_ARRANGE_FLAG_ = #{manArrangeFlag}
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseCode)">
        and t3.COURSE_CODE_ = #{courseCode,jdbcType=VARCHAR}
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseName)">
        and t3.COURSE_NAME_ = #{courseName,jdbcType=VARCHAR}
      </if>
      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(campus)">
        and t2.CAMPUS_ = #{campus,jdbcType=VARCHAR}
      </if>
    </where>
  </select>
  
  <update id="increElcNumberAtomic">
  	update teaching_class_t set ELC_NUMBER_ = ELC_NUMBER_ + 1 where id_ = #{teachingClassId} and NUMBER_ > ELC_NUMBER_
  </update>
  
  <update id="increElcNumber">
  	update teaching_class_t set ELC_NUMBER_ = ELC_NUMBER_ + 1 where id_ = #{teachingClassId}
  </update>
  
  <update id="decrElcNumber">
  	update teaching_class_t set ELC_NUMBER_ = ELC_NUMBER_ - 1 where id_ = #{teachingClassId} and ELC_NUMBER_ > 0
  </update>
  
  <select id="selectOversize" resultMap="BaseResultMap">
  	select * from teaching_class_t where id_ = #{teachingClassId} and ELC_NUMBER_ > NUMBER_
  </select>
  
  <select id="selectSuggestProfession" resultType="com.server.edu.election.dto.SuggestProfessionDto">
    select GRADE_ as grade,PROFESSION_ as profession,NUMBER_ as number 
    from teaching_class_suggest_profession_t where TEACHING_CLASS_ID_ = #{teachingClassId}
  </select>
  
  <select id="selectSuggestStudent" resultType="string">
  	select STUDENT_ID_ from teaching_class_suggest_student_t where TEACHING_CLASS_ID_ = #{teachingClassId}
  </select>
  
  <select id="selectSuggestCourse" resultType="com.server.edu.election.studentelec.context.ElecCourse">
  	SELECT cour.id_ as courseId, cour.code_ as courseCode, open.COURSE_NAME_ as courseName 
	from course_t cour
	join course_open_t open ON open.COURSE_CODE_ = cour.code_
	join teaching_task_t task ON task.COURSE_OPEN_ID_ = open.id_
	join teaching_class_t class ON task.id_ = class.TASK_ID_
	where(
		select TEACHING_CLASS_ID_ from teaching_class_suggest_student_t where STUDENT_ID_ = #{stu.studentId}
		UNION
		select TEACHING_CLASS_ID_ from teaching_class_suggest_profession_t 
		where GRADE_ = #{stu.grade} and PROFESSION_ = #{stu.major}
	)
	GROUP BY cour.id_, cour.code_, open.COURSE_NAME_ 
  </select>
  

    <select id="findTeachingClassIdTime" resultType="com.server.edu.election.dto.TeacherClassTimeRoom">
        select ti.ID_ arrangeTimeId,ti.DAY_OF_WEEK_ dayOfWeek,ti.TIME_START_ timeStart,ti.TIME_END_ timeEnd,ro.WEEK_NUMBER_ weekNumber
        from teaching_class_t t2
        join teaching_class_arrange_time_t ti on t2.ID_ = ti.TEACHING_CLASS_ID_
        join teaching_class_arrange_room_t ro on ti.ID_=ro.ARRANGE_TIME_ID_
        where t2.ID_=#{teachingClassId}
    </select>

  <select id="getClassTimes" parameterType="java.util.List" resultType="com.server.edu.election.dto.TeacherClassTimeRoom">
		 SELECT
			t2.ID_ teachClassId,
			t3.ID_ arrangeTimeId,
			t3.TIME_START_ timeStart,
			t3.TIME_END_ timeEnd,
			t3.DAY_OF_WEEK_ dayOfWeek,
			t4.WEEK_NUMBER_ weekNumber,
			t4.ROOM_ID_ roomId,
			t4.TEACHER_CODE_ teacherCode 
		FROM
		teaching_class_t t2
		JOIN teaching_class_arrange_time_t t3 ON t2.ID_ = t3.TEACHING_CLASS_ID_
		JOIN teaching_class_arrange_room_t t4 ON t4.ARRANGE_TIME_ID_ = t3.ID_
		WHERE
		t2.ID_ in
        <foreach collection="list" open="(" separator="," close=")" item="id">
            #{id}
         </foreach>
   </select>

</mapper>