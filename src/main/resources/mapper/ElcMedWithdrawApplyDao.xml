<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.server.edu.election.dao.ElcMedWithdrawApplyDao">
  <resultMap id="BaseResultMap" type="com.server.edu.election.entity.ElcMedWithdrawApply">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="ID_" jdbcType="BIGINT" property="id" />
    <result column="STUDENT_ID_" jdbcType="VARCHAR" property="studentId" />
    <result column="PAID_FLAG_" jdbcType="BIT" property="paidFlag" />
    <result column="PAID_PRICE_" jdbcType="DOUBLE" property="paidPrice" />
    <result column="PAY_TIME_" jdbcType="TIMESTAMP" property="payTime" />
    <result column="REQUIRE_PAID_" jdbcType="BIT" property="requirePaid" />
    <result column="REQUIRE_PRICE_" jdbcType="DOUBLE" property="requirePrice" />
    <result column="WITHDRAW_FLAG_" jdbcType="BIT" property="withdrawFlag" />
    <result column="TEACHING_CLASS_ID_" jdbcType="BIGINT" property="teachingClassId" />
    <result column="MAIL_FLAG_" jdbcType="BIT" property="mailFlag" />
    <result column="TRADE_NO_" jdbcType="VARCHAR" property="tradeNo" />
    <result column="CREATED_AT_" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="UPDATED_AT" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  
  <select id="selectMedApplyList" parameterType="com.server.edu.election.dto.ElcMedWithdrawApplyDto" resultType="com.server.edu.election.vo.ElcMedWithdrawApplyVo">
		SELECT
			t1.ID_ id,
			t1.STUDENT_ID_ studentId,
			t1.WITHDRAW_FLAG_ withdrawFlag,
			t2.ID_ teachingClassId,
			t2.CODE_ CODE,
			t2.NAME_ NAME,
			t2.CAMPUS_ campus,
			t4.COURSE_CODE_ courseCode,
			t4.COURSE_NAME_ courseName,
			t4.COURSE_NAME_EN_ courseNameEn,
			t4.TRAINING_LEVEL_ trainingLevel,
			t4.NATURE_ nature,
			t4.FACULTY_ faculty,
			t5.OPRATION_OBJ_CODE,
			t5.OPRATION_OBJ_NAME,
			t6.NAME_  studentName
		FROM
			elc_med_withdraw_apply_t t1
		INNER JOIN teaching_class_t t2 ON t1.TEACHING_CLASS_ID_ = t2.ID_
		INNER JOIN teaching_task_t t3 ON t2.TASK_ID_ = t3.ID_
		INNER JOIN course_open_t t4 ON t4.ID_ = t3.COURSE_OPEN_ID_
		LEFT JOIN elc_med_withdraw_apply_log_t t5 ON 
		<if test="type!=null and type==0">
	        (t5.TEACHING_CLASS_ID_ = t1.TEACHING_CLASS_ID_ and t5.OPRATION_OBJ_CODE=t1.STUDENT_ID_)
	      </if>
	     <if test="type!=null and type==1">
	        (t5.TEACHING_CLASS_ID_ = t1.TEACHING_CLASS_ID_ and t5.OPRATION_OBJ_CODE!=t1.STUDENT_ID_)
	      </if>
		INNER JOIN student_t t6  ON t1.STUDENT_ID_ = t6.STUDENT_CODE_
	 <where>
	      1=1
	      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(calendarId)">
	        and t4.CALENDAR_ID_= #{calendarId}
	      </if>
	      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(campus)">
	        and t4.CAMPUS_= #{campus}
	      </if>
	      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(faculty)">
	        and t4.FACULTY_= #{faculty}
	      </if> 
	      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(nature)">
	        and t4.NATURE_= #{nature}
	      </if>
	      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseCode)">
	        and t4.COURSE_CODE_ like concat(#{courseCode},'%')
	      </if>
	      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(keyWord)">
	        and (t4.COURSE_CODE_ like concat(#{keyWord},'%') or t2.CODE_ like concat(#{keyWord},'%'))
	      </if>
	      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(withdrawFlag)">
	        and t1.WITHDRAW_FLAG_ = #{withdrawFlag}
	      </if>
	      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(studentId)">
	        and t1.STUDENT_ID_ like concat(#{studentId},'%')
	      </if> 	       	      	       
	  </where>		   		
  </select>
  <select id="selectApplyLogs" parameterType="com.server.edu.election.dto.ElcMedWithdrawApplyDto" resultType="com.server.edu.election.vo.ElcMedWithdrawApplyVo">
	   SELECT
		t1.ID_ id,
		t1.STUDENT_ID_ studentId,
		t1.WITHDRAW_FLAG_ withdrawFlag,
		t2.CONTENT_ content,
		t3.ID_ teachingClassId,
		t3.CODE_ CODE,
		t3.NAME_ NAME,
		t3.CAMPUS_ campus,
		t3.PERIOD_ period,
		t5.COURSE_CODE_ courseCode,
		t5.COURSE_NAME_ courseName,
		t5.COURSE_NAME_EN_ courseNameEn,
		t5.TRAINING_LEVEL_ trainingLevel,
		t5.NATURE_ nature,
		t5.FACULTY_ faculty,
		t5.CREDITS_ credits
	FROM
		elc_med_withdraw_apply_t t1
	INNER JOIN elc_med_withdraw_apply_log_t t2 ON (
		t1.STUDENT_ID_ = t2.STUDENT_ID_
		AND t1.TEACHING_CLASS_ID_ = t2.TEACHING_CLASS_ID_
	)
	INNER JOIN teaching_class_t t3 ON t3.ID_ = t1.TEACHING_CLASS_ID_
	INNER JOIN teaching_task_t t4 ON t3.TASK_ID_ = t4.ID_
	INNER JOIN course_open_t t5 ON t5.ID_ = t4.COURSE_OPEN_ID_
	<where>
	     <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(studentId)">
	         and t1.STUDENT_ID_ = #{studentId}
	      </if>
	      <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(calendarId)">
	        and t5.CALENDAR_ID_= #{calendarId}
	      </if>
	</where>
  </select>
  
  <update id="batchUpdate" parameterType="java.util.List">
     <foreach item="item" collection="list" index="index"
             separator=",">
       update elc_med_withdraw_apply_t set WITHDRAW_FLAG_ =#{item.withdrawFlag} 
       where ID_ =#{item.id}          
    </foreach>
  </update>
</mapper>