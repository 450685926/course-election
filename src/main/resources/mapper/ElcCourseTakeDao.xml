<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.server.edu.election.dao.ElcCourseTakeDao">
  <resultMap id="BaseResultMap" type="com.server.edu.election.entity.ElcCourseTake">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="ID_" jdbcType="BIGINT" property="id" />
    <result column="STUDENT_ID_" jdbcType="VARCHAR" property="studentId" />
    <result column="CALENDAR_ID_" jdbcType="BIGINT" property="calendarId" />
    <result column="COURSE_ID_" jdbcType="BIGINT" property="courseId" />
    <result column="TEACHING_CLASS_ID_" jdbcType="BIGINT" property="teachingClassId" />
    <result column="COURSE_TAKE_TYPE_" jdbcType="INTEGER" property="courseTakeType" />
    <result column="TURN_" jdbcType="INTEGER" property="turn" />
    <result column="CHOOSE_OBJ_" jdbcType="INTEGER" property="chooseObj" />
    <result column="PAID_" jdbcType="INTEGER" property="paid" />
    <result column="BILL_ID_" jdbcType="BIGINT" property="billId" />
    <result column="CREATED_AT_" jdbcType="TIMESTAMP" property="createdAt" />
  </resultMap>
  <resultMap type="com.server.edu.election.vo.ElcCourseTakeVo" id="VoResultMap" extends="BaseResultMap">
  	<result column="NAME_" jdbcType="VARCHAR" property="studentName" />
  	<result column="courseCode" jdbcType="VARCHAR" property="courseCode" />
  	<result column="CAMPUS_" jdbcType="VARCHAR" property="campus" />
  	<result column="PROFESSION_" jdbcType="VARCHAR" property="profession" />
  	<result column="courseName" jdbcType="VARCHAR" property="courseName" />
  	<result column="CREDITS_" jdbcType="DOUBLE" property="credits" />
  	<result column="teachingClassCode" jdbcType="VARCHAR" property="teachingClassCode" />
  </resultMap>
  
  <select id="listPage" resultMap="VoResultMap">
  	select 
  		t1.STUDENT_ID_, t1.COURSE_TAKE_TYPE_, 
  		t2.NAME_, t2.CAMPUS_, t2.PROFESSION_, 
  		t3.CODE_ as courseCode, t3.NAME_ as courseName, t3.CREDITS_,
  		t4.CODE_ as teachingClassCode
  	from elc_course_takes_t t1
  	join student_t t2 ON t2.STUDENT_CODE_ = t1.STUDENT_ID_
  	join course_t t3 ON t3.ID_ = t1.COURSE_ID_
  	join teaching_class_t t4 ON t4.ID_ = t1.TEACHING_CLASS_ID_ 
  	<where>
  	 t1.CALENDAR_ID_ =#{query.calendarId,jdbcType=BIGINT}
  	 <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.studentId)">
  	 t1.STUDENT_ID_ = #{query.studentId}
  	 </if>
  	 <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.courseTakeType)">
  	 t1.COURSE_TAKE_TYPE_ = #{query.courseTakeType}
  	 </if>
  	 <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.stuName)">
  	 t2.NAME_ = #{query.stuName}
  	 </if>
  	 <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.stuFaculty)">
  	 t2.FACULTY_ = #{query.stuFaculty}
  	 </if>
  	 <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.stuProfession)">
  	 t2.PROFESSION_ = #{query.stuProfession}
  	 </if>
  	 <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.courseCode)">
  	 t3.CODE_ = #{query.courseCode}
  	 </if>
  	 <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.teachingClassCode)">
  	 t4.CODE_ = #{query.teachingClassCode}
  	 </if>
  	</where>
  </select>
  
  <select id="listHistoryPage" resultMap="VoResultMap">
  	select 
  		t1.STUDENT_ID_, t1.COURSE_TAKE_TYPE_, 
  		t2.NAME_, t2.CAMPUS_, t2.PROFESSION_, 
  		t3.CODE_ as courseCode, t3.NAME_ as courseName, t3.CREDITS_,
  		t4.CODE_ as teachingClassCode
  	from election_log_t t1
  	join student_t t2 ON t2.STUDENT_CODE_ = t1.STUDENT_ID_
  	join course_t t3 ON t3.ID_ = t1.COURSE_ID_
  	join teaching_class_t t4 ON t4.ID_ = t1.TEACHING_CLASS_ID_ 
  	<where>
  	 t1.CALENDAR_ID_ =#{query.calendarId,jdbcType=BIGINT}
  	 and t1.STUDENT_ID_ = #{query.studentId}
  	</where>
  </select>
  
  <select id="getCourseIdByClassId" resultType="long">
  	select id_ from course_t where code_ = (
  		select COURSE_CODE_ from course_open_t where id_ = (
  			select COURSE_OPEN_ID_ from teaching_task_t where id_ = (
  				select TASK_ID_ from teaching_class_t where id_ = #{teachingClassId}
  			)
  		)
  	)
  </select>

  <select id="findIsEletionCourse" resultType="int">
      SELECT COUNT(ID_) FROM `elc_course_takes_t` WHERE COURSE_ID_ in (select ID_ from course_t where CODE_ =#{courseCode,jdbcType=VARCHAR})
      and STUDENT_ID_ =#{studentCode}
      and CALENDAR_ID_ =#{calendarId,jdbcType=BIGINT}
  </select>

  <select id="findCourseNoChargeList" parameterType="com.server.edu.election.dto.RebuildCoursePaymentCondition" resultType="com.server.edu.election.entity.RebuildCourseNoChargeList">
    SELECT el.ID_ id,el.CALENDAR_ID_ calendarId,st.STUDENT_CODE_ studentCode,st.NAME_ studentName,co.CODE_ code,co.NAME_ codeName,co.NATURE_ nature,co.CREDITS_ credits,co.LABEL_ label,el.PAID_ paid,te.WEEK_HOUR_ weekHour
    ,te.END_WEEK_ endWeek,te.START_WEEK_ startWeek,te.ID_ teachingClassId,te.CODE_ teachingClassCode FROM `elc_course_takes_t` el LEFT JOIN student_t st on el.STUDENT_ID_=st.STUDENT_CODE_
    LEFT JOIN course_t co on el.COURSE_ID_=co.ID_ LEFT JOIN teaching_class_t te on el.TEACHING_CLASS_ID_=te.ID_
    <where>
      <if test="true">
        and el.COURSE_TAKE_TYPE_=2 and el.PAID_=0
      </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(calendarId)">
            and el.CALENDAR_ID_ = #{calendarId,jdbcType=BIGINT}
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(studentCode)">
            and st.STUDENT_CODE_ like CONCAT('%', #{studentCode,jdbcType=VARCHAR}, '%')
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(classCode)">
            and te.CODE_ like CONCAT('%', #{classCode,jdbcType=VARCHAR}, '%')
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(studentName)">
            and st.NAME_ like CONCAT('%', #{studentName,jdbcType=VARCHAR}, '%')
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(grade)">
            and st.GRADE_ =#{grade,jdbcType=INTEGER}
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(trainingLevel)">
            and st.TRAINING_LEVEL_ =#{trainingLevel,jdbcType=VARCHAR}
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(studentCategory)">
            and st.STUDENT_CATEGORY_ =#{studentCategory,jdbcType=VARCHAR}
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(faculty)">
            and st.FACULTY_ =#{faculty,jdbcType=VARCHAR}
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(profession)">
            and st.PROFESSION_ =#{profession,jdbcType=VARCHAR}
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(researchDirection)">
            and st.RESEARCH_DIRECTION_ =#{researchDirection,jdbcType=VARCHAR}
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(openFaculty)">
            and co.COLLEGE_ =#{openFaculty,jdbcType=VARCHAR}
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(label)">
            and co.LABEL_ like CONCAT('%', #{label,jdbcType=VARCHAR}, '%')
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseId)">
            and co.ID_ like CONCAT('%', #{courseId,jdbcType=BIGINT}, '%')
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(code)">
            and co.CODE_ like CONCAT('%', #{code,jdbcType=VARCHAR}, '%')
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(name)">
            and co.NAME_ like CONCAT('%', #{name,jdbcType=VARCHAR}, '%')
        </if>
    </where>
  </select>

  <select id="findCourseNoChargeStudentList" parameterType="com.server.edu.election.dto.RebuildCoursePaymentCondition" resultType="com.server.edu.election.vo.StudentVo">
    SELECT st.ID_ id, el.CALENDAR_ID_ calendarId,st.STUDENT_CODE_ studentCode,st.NAME_ name,st.SEX_ sex,
    st.GRADE_  grade, st.FACULTY_ faculty,st.PROFESSION_ profession,st.TRAINING_LEVEL_ trainingLevel,st.STUDENT_CATEGORY_ studentCategory,COUNT(el.ID_) rebuildNumber FROM `elc_course_takes_t` el
    LEFT JOIN student_t st on st.STUDENT_CODE_=el.STUDENT_ID_
      LEFT JOIN teaching_class_t te on el.TEACHING_CLASS_ID_=te.ID_
    <where>
      <if test="true">
        and el.COURSE_TAKE_TYPE_=2 and el.PAID_=0
      </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(calendarId)">
            and el.CALENDAR_ID_ = #{calendarId,jdbcType=BIGINT}
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(studentCode)">
            and st.STUDENT_CODE_ like CONCAT('%', #{studentCode,jdbcType=VARCHAR}, '%')
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(classCode)">
            and te.CODE_ like CONCAT('%', #{classCode,jdbcType=VARCHAR}, '%')
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(studentName)">
            and st.NAME_ like CONCAT('%', #{studentName,jdbcType=VARCHAR}, '%')
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(grade)">
            and st.GRADE_ =#{grade,jdbcType=INTEGER}
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(trainingLevel)">
            and st.TRAINING_LEVEL_ =#{trainingLevel,jdbcType=VARCHAR}
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(studentCategory)">
            and st.STUDENT_CATEGORY_ =#{studentCategory,jdbcType=VARCHAR}
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(faculty)">
            and st.FACULTY_ =#{faculty,jdbcType=VARCHAR}
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(profession)">
            and st.PROFESSION_ =#{profession,jdbcType=VARCHAR}
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(researchDirection)">
            and st.RESEARCH_DIRECTION_ =#{researchDirection,jdbcType=VARCHAR}
        </if>
    </where>
    GROUP BY el.STUDENT_ID_
  </select>

    <select id="findRollBookList" parameterType="com.server.edu.election.dto.ReportManagementCondition" resultType="com.server.edu.election.entity.RollBookList">
        SELECT el.ID_ id,el.CALENDAR_ID_ calendarId,el.TEACHING_CLASS_ID_ teachingClassId,cl.CODE_ calssCode,co.CODE_ courseCode,co.NAME_ courseName,ss.NUMBER_ selectCourseNumber,cl.NUMBER_ numberLimit,co.LABEL_ label,co.COLLEGE_ faculty FROM `elc_course_takes_t` el
        LEFT JOIN course_t co on co.ID_=el.COURSE_ID_
        LEFT JOIN teaching_class_t cl on cl.ID_=el.TEACHING_CLASS_ID_
        LEFT JOIN (select COURSE_ID_,COUNT(ID_) NUMBER_ from elc_course_takes_t GROUP BY COURSE_ID_) ss on ss.COURSE_ID_=el.COURSE_ID_
        <where>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(calendarId)">
                and el.CALENDAR_ID_ =#{calendarId,jdbcType=BIGINT}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(faculty)">
                and co.COLLEGE_ =#{faculty,jdbcType=VARCHAR}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(trainingLevel)">
                and co.TRAINING_LEVEL_ =#{trainingLevel,jdbcType=VARCHAR}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(campus)">
                and cl.CAMPUS_ =#{campus,jdbcType=VARCHAR}
            </if>
            <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(formLearning)">
                and co.FORM_LEARNING_ =#{formLearning,jdbcType=VARCHAR}
            </if>

        </where>
        GROUP BY el.TEACHING_CLASS_ID_
    </select>

    <select id="findTeacherByClassCode" parameterType="java.util.List" resultType="com.server.edu.election.dto.ClassTeacherDto">
        select cl.CODE_ classCode,ro.TEACHER_CODE_ teacherCode,te.TEACHER_NAME_  teacherName from teaching_class_t cl
        LEFT JOIN teaching_class_arrange_time_t ti on cl.ID_=ti.TEACHING_CLASS_ID_
        LEFT JOIN teaching_class_arrange_room_t ro on ro.ARRANGE_TIME_ID_=ti.ID_
        LEFT JOIN teaching_class_teacher_t te on te.TEACHER_CODE_=ro.TEACHER_CODE_
        <where>
            and cl.CODE_ in
            <foreach collection="list" open="(" close=")" separator="," item="item">
                #{item.calssCode,jdbcType=VARCHAR}
            </foreach>
        </where>
        GROUP BY ro.TEACHER_CODE_
    </select>
</mapper>