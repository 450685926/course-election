<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.server.edu.election.dao.ElcLogDao">
  <resultMap id="BaseResultMap" type="com.server.edu.election.entity.ElcLog">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="ID_" jdbcType="BIGINT" property="id" />
    <result column="STUDENT_ID_" jdbcType="VARCHAR" property="studentId" />
    <result column="COURSE_CODE_" jdbcType="VARCHAR" property="courseCode" />
    <result column="COURSE_NAME_" jdbcType="VARCHAR" property="courseName" />
    <result column="TEACHING_CLASS_CODE_" jdbcType="VARCHAR" property="teachingClassCode" />
    <result column="CALENDAR_ID_" jdbcType="BIGINT" property="calendarId" />
    <result column="TYPE_" jdbcType="INTEGER" property="type" />
    <result column="MODE_" jdbcType="INTEGER" property="mode" />
    <result column="TURN_" jdbcType="INTEGER" property="turn" />
    <result column="CREATE_BY_" jdbcType="VARCHAR" property="createBy" />
    <result column="CREATE_IP_" jdbcType="VARCHAR" property="createIp" />
    <result column="CREATED_AT_" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="CREATE_NAME_" jdbcType="VARCHAR" property="createName" />
    <result column="CONTENT_" jdbcType="VARCHAR" property="content" />

  </resultMap>
  
  <resultMap type="com.server.edu.election.vo.ElcLogVo" id="VoElcLogMap" extends="BaseResultMap">
  	<result column="NAME_" jdbcType="VARCHAR" property="studentName" />
  	<result column="CAMPUS_" jdbcType="VARCHAR" property="campus" />
  	<result column="PROFESSION_" jdbcType="VARCHAR" property="profession" />
  </resultMap>
  
  <select id="listPage" resultMap="VoElcLogMap">
  	select t1.*, t2.NAME_, t2.CAMPUS_, t2.PROFESSION_
  	from election_log_t t1 
  	left join student_t t2 ON t2.STUDENT_CODE_ = t1.STUDENT_ID_
  	<where>
  		t1.CALENDAR_ID_ =#{query.calendarId,jdbcType=BIGINT}
	  	<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.studentId)">
	  	and t1.STUDENT_ID_ = #{query.studentId}
	  	</if>
	  	<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.studentIds)">
		and t1.STUDENT_ID_ IN 
		  	<foreach item="id" collection="query.studentIds"  index="index" open="(" separator="," close=")">  
		       #{id}  
		    </foreach>
	  	</if>
	  	<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.type)">
	  	and t1.TYPE_ = #{query.type}
	  	</if>
	  	<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.mode)">
	  	and t1.MODE_ = #{query.mode}
	  	</if>
	  	<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.teachingClassCode)">
            and t1.TEACHING_CLASS_CODE_ like CONCAT(#{query.teachingClassCode},'%')
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.courseCode)">
            and t1.COURSE_CODE_ like CONCAT(#{query.courseCode},'%')
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.courseName)">
            and t1.COURSE_NAME_ like CONCAT(#{query.courseName},'%')
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.keyword)">
            and (t2.STUDENT_CODE_ like CONCAT(#{query.keyword},'%') or t2.NAME_ like CONCAT(#{query.keyword},'%'))
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.startTime)">
            <![CDATA[
				and t1.CREATED_AT_ >= #{query.startTime}
				   ]]>
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.endTime)">
            <![CDATA[
				and t1.CREATED_AT_ <= #{query.endTime}
				   ]]>
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.deptId)">
            and t2.MANAGER_DEPT_ID_ = #{query.deptId}
        </if>
  	</where>
  	order by t1.CREATED_AT_ DESC
  </select>

    <insert id="saveCourseLog" parameterType="java.util.List">
        insert into elc_course_takes_t
        (STUDENT_ID_, CALENDAR_ID_,COURSE_CODE_,COURSE_NAME_,TEACHING_CLASS_CODE_,TYPE_,MODE,CREATE_BY_,CREATE_NAME_,CREATED_AT_)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.studentId},
            #{item.calendarId},
            #{item.courseCode},
            #{item.courseName},
            #{item.teachingClassCode},
            #{item.type},
            #{item.mode},
            #{item.createBy},
            #{item.createName},
            #{item.createdAt}
            )
        </foreach>
    </insert>

</mapper>