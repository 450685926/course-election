<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.server.edu.election.dao.ExemptionCourseScoreDao">
    <resultMap id="BaseResultMap" type="com.server.edu.election.entity.ExemptionCourseScore">
        <id column="ID_" jdbcType="BIGINT" property="id" />
        <result column="CALENDAR_ID_" jdbcType="BIGINT" property="calendarId" />
        <result column="STUDENT_CODE_" jdbcType="VARCHAR" property="studentCode" />
        <result column="STUDENT_NAME_" jdbcType="VARCHAR" property="studentName" />
        <result column="COURSE_CODE_" jdbcType="VARCHAR" property="courseCode" />
        <result column="SCORE_" jdbcType="DOUBLE" property="score" />
    </resultMap>
    <sql id="Base_Column_List">
        ID_, CALENDAR_ID_, STUDENT_CODE_, STUDENT_NAME_, COURSE_CODE_, SCORE_
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from exemption_score_t
        where ID_ = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from exemption_score_t
        where ID_ = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.server.edu.election.entity.ExemptionCourseScore">
        insert into exemption_score_t (ID_, CALENDAR_ID_, STUDENT_CODE_,
        STUDENT_NAME_, COURSE_CODE_, SCORE_
        )
        values (#{id,jdbcType=BIGINT}, #{calendarId,jdbcType=BIGINT}, #{studentCode,jdbcType=VARCHAR},
        #{studentName,jdbcType=VARCHAR}, #{courseCode,jdbcType=VARCHAR}, #{score,jdbcType=DOUBLE}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.server.edu.election.entity.ExemptionCourseScore">
        insert into exemption_score_t
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID_,
            </if>
            <if test="calendarId != null">
                CALENDAR_ID_,
            </if>
            <if test="studentCode != null">
                STUDENT_CODE_,
            </if>
            <if test="studentName != null">
                STUDENT_NAME_,
            </if>
            <if test="courseCode != null">
                COURSE_CODE_,
            </if>
            <if test="score != null">
                SCORE_,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="calendarId != null">
                #{calendarId,jdbcType=BIGINT},
            </if>
            <if test="studentCode != null">
                #{studentCode,jdbcType=VARCHAR},
            </if>
            <if test="studentName != null">
                #{studentName,jdbcType=VARCHAR},
            </if>
            <if test="courseCode != null">
                #{courseCode,jdbcType=VARCHAR},
            </if>
            <if test="score != null">
                #{score,jdbcType=DOUBLE},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.server.edu.election.entity.ExemptionCourseScore">
        update exemption_score_t
        <set>
            <if test="calendarId != null">
                CALENDAR_ID_ = #{calendarId,jdbcType=BIGINT},
            </if>
            <if test="studentCode != null">
                STUDENT_CODE_ = #{studentCode,jdbcType=VARCHAR},
            </if>
            <if test="studentName != null">
                STUDENT_NAME_ = #{studentName,jdbcType=VARCHAR},
            </if>
            <if test="courseCode != null">
                COURSE_CODE_ = #{courseCode,jdbcType=VARCHAR},
            </if>
            <if test="score != null">
                SCORE_ = #{score,jdbcType=DOUBLE},
            </if>
        </set>
        where ID_ = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.server.edu.election.entity.ExemptionCourseScore">
        update exemption_score_t
        set CALENDAR_ID_ = #{calendarId,jdbcType=BIGINT},
        STUDENT_CODE_ = #{studentCode,jdbcType=VARCHAR},
        STUDENT_NAME_ = #{studentName,jdbcType=VARCHAR},
        COURSE_CODE_ = #{courseCode,jdbcType=VARCHAR},
        SCORE_ = #{score,jdbcType=DOUBLE}
        where ID_ = #{id,jdbcType=BIGINT}
    </update>

    <select id="findExemptionScore" parameterType="com.server.edu.election.dto.ExemptionCourseScoreDto" resultType="com.server.edu.election.vo.ExemptionCourseScoreVo">
          SELECT sc.ID_ id, sc.CALENDAR_ID_ calendarId, st.STUDENT_CODE_ studentCode ,st.NAME_ studentName,st.GRADE_ grade,st.TRAINING_LEVEL_ trainingLevel
          ,st.FACULTY_ faculty,ct.CODE_ courseCode ,ct.NAME_ courseName,sc.SCORE_ score FROM `exemption_score_t` sc
            LEFT JOIN student_t st on sc.STUDENT_CODE_ =st.STUDENT_CODE_
            left JOIN course_t ct on ct.CODE_=sc.COURSE_CODE_
            <where>
                <if test="calendarId !=null ">
                    and  sc.CALENDAR_ID_ =#{calendarId,jdbcType=BIGINT}
                </if>
                <if test="grade !=null">
                    and st.GRADE_ =#{grade,jdbcType=INTEGER}
                </if>
                <if test="trainingLevel!=null and trainingLevel!='' ">
                    and  st.TRAINING_LEVEL_ = #{trainingLevel,jdbcType=VARCHAR}
                </if>
                <if test="formLearning!=null and formLearning!='' ">
                    and st.FORM_LEARNING_ = #{formLearning,jdbcType=VARCHAR}
                </if>
                <if test="trainingCategory!=null and trainingCategory!='' ">
                    and st.TRAINING_CATEGORY_=#{trainingCategory,jdbcType=VARCHAR}
                </if>
                <if test="faculty !=null and faculty !='' ">
                    and st.FACULTY_ =#{faculty,jdbcType=VARCHAR}
                </if>
                <if test="profession !=null and profession !='' ">
                    and st.PROFESSION_ =#{profession,jdbcType=VARCHAR}
                </if>
                <if test="campus !=null and campus !='' ">
                    and st.CAMPUS_ =#{campus,jdbcType=VARCHAR}
                </if>
                <if test="registrationStatus !=null and registrationStatus !='' ">
                    and st.REGISTRATION_STATUS_ =#{registrationStatus,jdbcType=VARCHAR}
                </if>
                <if test="isOverseas !=null and isOverseas !='' ">
                    and st.IS_OVERSEAS_ =#{isOverseas,jdbcType=VARCHAR}
                </if>
                <if test="enrolSeason !=null and enrolSeason!='' ">
                    and st.ENROL_SEASON_ =#{enrolSeason,jdbcType=VARCHAR}
                </if>
                <if test="condition !=null and condition !='' ">
                    and (st.STUDENT_CODE_ like concat('%',#{condition},'%') or st.NAME_ like concat('%',#{condition},'%') )
                </if>
            </where>
    </select>

    <select id="findCourseScore" resultMap="BaseResultMap">
        select
        sc.ID_, sc.CALENDAR_ID_, sc.STUDENT_CODE_, sc.STUDENT_NAME_, sc.COURSE_CODE_, sc.SCORE_
        from exemption_score_t sc
        LEFT JOIN student_t st on sc.STUDENT_CODE_ =st.STUDENT_CODE_
        <where>
            <if test="courseRule.calendarId !=null">
                and sc.CALENDAR_ID_ = #{courseRule.calendarId,jdbcType=BIGINT}
            </if>
            <if test="courseRule.grade !=null">
                and st.GRADE_ =#{courseRule.grade,jdbcType=INTEGER}
            </if>
            <if test="courseRule.trainingLevel !=null and courseRule.trainingLevel!='' ">
                and st.TRAINING_LEVEL_ =#{courseRule.trainingLevel,jdbcType=VARCHAR}
            </if>
            <if test="courseRule.trainingCategory !=null and courseRule.trainingCategory!='' ">
                and st.TRAINING_CATEGORY_ =#{courseRule.trainingCategory,jdbcType=VARCHAR}
            </if>
            <if test="list !=null and list.size() > 0 ">
                and COURSE_CODE_ in
                <foreach collection="list" item="code" open="("  separator="," close=")">
                    #{code}
                </foreach>
            </if>
        </where>
        order by SCORE_ desc
    </select>

    <select id="findStudentScore" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"></include>
        from exemption_score_t
        where CALENDAR_ID_=#{calendarId,jdbcType=BIGINT}
        and STUDENT_CODE_ =#{studentCode,jdbcType=VARCHAR}
        and COURSE_CODE_ =#{courseCode,jdbcType=VARCHAR}
    </select>
</mapper>