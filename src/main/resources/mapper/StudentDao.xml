<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.server.edu.election.dao.StudentDao">
  <resultMap id="BaseResultMap" type="com.server.edu.election.entity.Student">
    <!--
      WARNING - @mbg.generated
    -->

    <result column="STUDENT_CODE_" jdbcType="VARCHAR" property="studentCode" />
    <result column="NAME_" jdbcType="VARCHAR" property="name" />
    <result column="SEX_" jdbcType="INTEGER" property="sex" />
    <result column="FORM_LEARNING_" jdbcType="VARCHAR" property="formLearning" />
    <result column="IS_OVERSEAS_" jdbcType="VARCHAR" property="isOverseas" />
    <result column="TRAINING_LEVEL_" jdbcType="VARCHAR" property="trainingLevel" />
    <result column="FACULTY_" jdbcType="VARCHAR" property="faculty" />
    <result column="PROFESSION_" jdbcType="VARCHAR" property="profession" />
    <result column="GRADE_" jdbcType="INTEGER" property="grade" />
    <result column="SPCIAL_PLAN_" jdbcType="VARCHAR" property="spcialPlan" />
    <result column="REGISTRATION_STATUS_" jdbcType="VARCHAR" property="registrationStatus" />
    <result column="ENROL_SEASON_" jdbcType="VARCHAR" property="enrolSeason" />
    <result column="CAMPUS_" jdbcType="VARCHAR" property="campus" />
    <result column="TRAINING_CATEGORY_" jdbcType="VARCHAR" property="trainingCategory" />
    <result column="DEGREE_CATEGORY_" jdbcType="VARCHAR" property="degreeCategory" />
    <result column="RESEARCH_DIRECTION_" jdbcType="VARCHAR" property="researchDirection" />
    <result column="STUDENT_CATEGORY_" jdbcType="VARCHAR" property="studentCategory" />
  </resultMap>
    <sql id="Base_Column_List">
        STUDENT_CODE_, NAME_, SEX_, FORM_LEARNING_, IS_OVERSEAS_, TRAINING_LEVEL_, FACULTY_,
        PROFESSION_, GRADE_, SPCIAL_PLAN_, REGISTRATION_STATUS_, ENROL_SEASON_, CAMPUS_,
        TRAINING_CATEGORY_, DEGREE_CATEGORY_,RESEARCH_DIRECTION_,STUDENT_CATEGORY_
    </sql>
    <select id="findStudentByCode" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"></include>
        from student_t
        where STUDENT_CODE_=#{studentCode,jdbcType=VARCHAR}
    </select>
    <select id="selectElcStudents" parameterType="com.server.edu.election.entity.Student" resultMap="BaseResultMap">
			SELECT
				t2.STUDENT_CODE_,
				t2.NAME_,
				t2.TRAINING_LEVEL_,
				t2.STUDENT_CATEGORY_,
				t2.FACULTY_,
				t2.PROFESSION_,
				t2.RESEARCH_DIRECTION_
			FROM
				elc_affinity_courses_stds_t t1
			INNER JOIN student_t t2 ON t1.STUDENT_ID_ = t2.STUDENT_CODE_
			where 1=1
	    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(studentCode)">
	        and t2.STUDENT_CODE_ like concat('%',#{studentCode},'%')
	    </if>
	    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(name)">
	        and t2.NAME_ like concat('%',#{name},'%')
	    </if>
    </select>
    
    <select id="selectUnElcStudents" parameterType="com.server.edu.election.entity.Student" resultMap="BaseResultMap">
		SELECT
			t1.STUDENT_CODE_,
			t1.NAME_,
			t1.TRAINING_LEVEL_,
			t1.STUDENT_CATEGORY_,
			t1.FACULTY_,
			t1.PROFESSION_,
			t1.RESEARCH_DIRECTION_
		FROM
			student_t t1
		WHERE
			STUDENT_CODE_ NOT IN (
				SELECT
					STUDENT_ID_
				FROM
					elc_affinity_courses_stds_t
			)
	    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(studentCode)">
	        and t1.STUDENT_CODE_ like concat('%',#{studentCode},'%')
	    </if>
	    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(name)">
	        and t1.NAME_ like concat('%',#{name},'%')
	    </if>
    </select>
    <select id="selectElcInvincibleStds" parameterType="com.server.edu.election.entity.Student" resultMap="BaseResultMap">
			SELECT
			t2.*
			FROM
				elc_invincible_stds_t t1
			INNER JOIN student_t t2 ON t1.STUDENT_ID_ = t2.STUDENT_CODE_
			where 1=1
	    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(name)">
	        and (t2.STUDENT_CODE_ like concat('%',#{name},'%') or t2.NAME_ like concat('%',#{name},'%'))
	    </if>
    </select>
    
    <select id="selectUnElcInvincibleStds" parameterType="com.server.edu.election.entity.Student" resultMap="BaseResultMap">
		SELECT
		  <include refid="Base_Column_List"></include>
		FROM
			student_t t1
		WHERE
			STUDENT_CODE_ NOT IN (
				SELECT
					STUDENT_ID_
				FROM
					elc_invincible_stds_t
			)
	    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(name)">
	        and (t1.STUDENT_CODE_ like concat('%',#{name},'%') or t1.NAME_ like concat('%',#{name},'%'))
	    </if>
    </select>    

	<select id="findStuRound" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List"></include>
		from student_t t1
		join election_rounds_stu_t t2 on t2.STUDENT_ID_=t1.STUDENT_CODE_
		WHERE t2.STUDENT_ID_=#{studentId} and t2.ROUNDS_ID_=#{roundId}
	</select>

	<select id="isLoserStu" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"></include>
		from student_t t1 JOIN
		 elc_loser_stds_t t2 on t1.STUDENT_CODE_=t2.STUDENT_ID_
		where t2.CALENDAR_ID_ =
		(select CALENDAR_ID_ from election_rounds_t
		WHERE ID_=#{roundId}) and t1.STUDENT_CODE_=#{studentId}
	</select>
</mapper>