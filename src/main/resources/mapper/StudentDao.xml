<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.server.edu.election.dao.StudentDao">
  <resultMap id="BaseResultMap" type="com.server.edu.election.entity.Student">
    <!--
      WARNING - @mbg.generated
    -->

    <result column="STUDENT_CODE_" jdbcType="VARCHAR" property="studentCode" />
    <result column="NAME_" jdbcType="VARCHAR" property="name" />
    <result column="SEX_" jdbcType="INTEGER" property="sex" />
    <result column="FORM_LEARNING_" jdbcType="VARCHAR" property="formLearning" />
    <result column="IS_OVERSEAS_" jdbcType="VARCHAR" property="isOverseas" />
    <result column="TRAINING_LEVEL_" jdbcType="VARCHAR" property="trainingLevel" />
    <result column="FACULTY_" jdbcType="VARCHAR" property="faculty" />
    <result column="PROFESSION_" jdbcType="VARCHAR" property="profession" />
    <result column="GRADE_" jdbcType="INTEGER" property="grade" />
    <result column="SPCIAL_PLAN_" jdbcType="VARCHAR" property="spcialPlan" />
    <result column="REGISTRATION_STATUS_" jdbcType="VARCHAR" property="registrationStatus" />
    <result column="ENROL_SEASON_" jdbcType="VARCHAR" property="enrolSeason" />
    <result column="CAMPUS_" jdbcType="VARCHAR" property="campus" />
    <result column="TRAINING_CATEGORY_" jdbcType="VARCHAR" property="trainingCategory" />
    <result column="DEGREE_CATEGORY_" jdbcType="VARCHAR" property="degreeCategory" />
    <result column="RESEARCH_DIRECTION_" jdbcType="VARCHAR" property="researchDirection" />
    <result column="STUDENT_CATEGORY_" jdbcType="VARCHAR" property="studentCategory" />
  </resultMap>
  <resultMap id="ResultMap" type="com.server.edu.election.dto.Student4Elc">
    <result column="STUDENT_CODE_" jdbcType="VARCHAR" property="studentId" />
    <result column="NAME_" jdbcType="VARCHAR" property="name" />
    <result column="SEX_" jdbcType="INTEGER" property="sex" />
    <result column="FORM_LEARNING_" jdbcType="VARCHAR" property="formLearning" />
    <result column="IS_OVERSEAS_" jdbcType="VARCHAR" property="isOverseas" />
    <result column="TRAINING_LEVEL_" jdbcType="VARCHAR" property="trainingLevel" />
    <result column="FACULTY_" jdbcType="VARCHAR" property="faculty" />
    <result column="PROFESSION_" jdbcType="VARCHAR" property="profession" />
    <result column="GRADE_" jdbcType="INTEGER" property="grade" />
    <result column="SPCIAL_PLAN_" jdbcType="VARCHAR" property="spcialPlan" />
    <result column="REGISTRATION_STATUS_" jdbcType="VARCHAR" property="registrationStatus" />
    <result column="ENROL_SEASON_" jdbcType="VARCHAR" property="enrolSeason" />
    <result column="CAMPUS_" jdbcType="VARCHAR" property="campus" />
    <result column="TRAINING_CATEGORY_" jdbcType="VARCHAR" property="trainingCategory" />
    <result column="DEGREE_CATEGORY_" jdbcType="VARCHAR" property="degreeCategory" />
    <result column="RESEARCH_DIRECTION_" jdbcType="VARCHAR" property="researchDirection" />
  </resultMap>
    <sql id="Base_Column_List">
        STUDENT_CODE_, NAME_, SEX_, FORM_LEARNING_, IS_OVERSEAS_, TRAINING_LEVEL_, FACULTY_,
        PROFESSION_, GRADE_, SPCIAL_PLAN_, REGISTRATION_STATUS_, ENROL_SEASON_, CAMPUS_,
        TRAINING_CATEGORY_, DEGREE_CATEGORY_,RESEARCH_DIRECTION_,STUDENT_CATEGORY_
    </sql>
    <select id="findStudentByCode" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"></include>
        from student_t
        where STUDENT_CODE_=#{studentCode,jdbcType=VARCHAR}
    </select>
    <select id="selectElcStudents" parameterType="com.server.edu.election.dto.StudentDto" resultMap="BaseResultMap">
		SELECT
			t2.STUDENT_CODE_,
			t2.NAME_,
			t2.TRAINING_LEVEL_,
			t2.STUDENT_CATEGORY_,
			t2.FACULTY_,
			t2.PROFESSION_,
			t2.RESEARCH_DIRECTION_
		FROM
			elc_affinity_courses_stds_t t1
		INNER JOIN student_t t2 ON (t1.STUDENT_ID_ = t2.STUDENT_CODE_)
		<where>
			t1.COURSE_ID_ =#{courseId}
		    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(studentCode)">
		        and t2.STUDENT_CODE_ like concat('%',#{studentCode},'%')
		    </if>
		    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(name)">
		        and t2.NAME_ like concat('%',#{name},'%')
		    </if>
		</where>
    </select>
    
    <select id="getStudent4CulturePlan" parameterType="com.server.edu.election.query.ElcCourseTakeQuery" resultMap="BaseResultMap">
		SELECT 
			t1.STUDENT_CODE_,
			t1.NAME_,
			t1.GRADE_,
			t1.TRAINING_LEVEL_,
			t1.TRAINING_CATEGORY_,
			t1.DEGREE_TYPE_,
			t1.FORM_LEARNING_,
			t1.FACULTY_,
			t1.PROFESSION_
		FROM student_t t1
		<where>
			t1.STUDENT_CODE_  IN  
			<foreach item="studentId" collection="query.studentIds" index="index" open="(" separator="," close=")">
		          #{studentId}
		    </foreach>
			AND t1.STUDENT_CODE_  NOT IN (SELECT STUDENT_ID_ FROM elc_course_takes_t t2 WHERE CALENDAR_ID_ = #{query.calendarId} GROUP BY t2.STUDENT_ID_)
		    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.keyword)">
	        and t1.STUDENT_CODE_ like concat('%',#{studentCode},'%')
		    </if>
	      	<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.grade)">
		  	and t1.GRADE_ = #{query.grade}
		  	</if>
		  	<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.keyword)">
		  	and (t1.STUDENT_CODE_ like concat('%',#{query.keyword},'%') or t1.NAME_ like concat('%',#{query.keyword},'%'))
		  	</if>
		  	<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.faculty)">
		  	and t1.FACULTY_ = #{query.faculty}
		  	</if>
		  	<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.profession)">
		  	and t1.PROFESSION_ = #{query.profession}
		  	</if>
			<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.degreeType)">
		    and t1.DEGREE_CATEGORY_= #{query.degreeType} 
		    </if>
		    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.formLearning)">
		    and t1.FORM_LEARNING_= #{query.formLearning} 
		    </if>
		    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.trainingLevel)">
		    and t1.TRAINING_LEVEL_= #{query.trainingLevel} 
		    </if>
		    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.trainingCategory)">
		    and t1.TRAINING_CATEGORY_= #{query.trainingCategory} 
		    </if>
		</where>
    </select>
    
    <select id="selectUnElcStudents" parameterType="com.server.edu.election.dto.StudentDto" resultMap="BaseResultMap">
		SELECT
			t1.STUDENT_CODE_,
			t1.NAME_,
			t1.TRAINING_LEVEL_,
			t1.STUDENT_CATEGORY_,
			t1.FACULTY_,
			t1.PROFESSION_,
			t1.RESEARCH_DIRECTION_
		FROM
			student_t t1
		WHERE
			STUDENT_CODE_ NOT IN (
				SELECT
					STUDENT_ID_
				FROM
					elc_affinity_courses_stds_t
				where 
				COURSE_ID_ =#{courseId}
			)
	    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(studentCode)">
	        and t1.STUDENT_CODE_ like concat('%',#{studentCode},'%')
	    </if>
	    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(name)">
	        and t1.NAME_ like concat('%',#{name},'%')
	    </if>
	     <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(trainingLevel)">
	        and t1.TRAINING_LEVEL_ = #{trainingLevel}
	    </if>
	     <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(faculty)">
	        and t1.FACULTY_ = #{faculty}
	    </if>
	    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(profession)">
	        and t1.PROFESSION_ = #{profession}
	    </if>
	    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(grade)">
	        and t1.GRADE_ = #{grade}
	    </if>
    </select>
    <select id="selectElcInvincibleStds" parameterType="com.server.edu.election.entity.Student" resultMap="BaseResultMap">
			SELECT
			t2.*
			FROM
				elc_invincible_stds_t t1
			INNER JOIN student_t t2 ON t1.STUDENT_ID_ = t2.STUDENT_CODE_
			<where>
			    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(studentCode)">
			        t2.STUDENT_CODE_ =#{studentCode}
			    </if>
			    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(name)">
			        and t2.NAME_ =#{name}
			    </if>
			    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(managerDeptId)">
			        and t2.MANAGER_DEPT_ID_ =#{managerDeptId}
			    </if>
			</where>
    </select>
    
    <select id="selectUnElcInvincibleStds" parameterType="com.server.edu.election.entity.Student" resultMap="BaseResultMap">
		SELECT
		  <include refid="Base_Column_List"></include>
		FROM
			student_t t1
		<where>
			STUDENT_CODE_ NOT IN (
				SELECT
					STUDENT_ID_
				FROM
					elc_invincible_stds_t
			)
			    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(studentCode)">
			       and  t1.STUDENT_CODE_ =#{studentCode}
			    </if>
			    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(name)">
			        and t1.NAME_ =#{name}
			    </if>
			    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(managerDeptId)">
			        and t1.MANAGER_DEPT_ID_ =#{managerDeptId}
			    </if>
			</where>
    </select>    

	<select id="findStuRound" resultMap="BaseResultMap">
		select 
		<include refid="Base_Column_List"></include>
		from student_t t1
		join election_rounds_stu_t t2 on t2.STUDENT_ID_=t1.STUDENT_CODE_
		WHERE t2.STUDENT_ID_=#{studentId} and t2.ROUNDS_ID_=#{roundId}
	</select>

	<select id="isLoserStu" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"></include>
		from student_t t1 JOIN
		 elc_loser_stds_t t2 on t1.STUDENT_CODE_=t2.STUDENT_ID_
		where t2.CALENDAR_ID_ =
		(select CALENDAR_ID_ from election_rounds_t
		WHERE ID_=#{roundId}) and t1.STUDENT_CODE_=#{studentId}
	</select>

    <select id="getAllCourse" parameterType="com.server.edu.election.vo.AllCourseVo" resultType="com.server.edu.election.studentelec.context.ElcCourseResult">
       select class.CODE_ teachingClassCode,
              course.COURSE_CODE_ courseCode,course.COURSE_NAME_ courseName,
              course.CREDITS_ credits,teacher.TEACHER_CODE_ teacherCode,teacher.TEACHER_NAME_ teacherName,
              course.FACULTY_ faculty,
			  class.ID_ teachClassId,
			  class.ELC_NUMBER_ elcNumber,class.NUMBER_ number,
			  class.REMARK_ remark
		from course_open_t course
   			 left join teaching_task_t task on course.ID_ = task.COURSE_OPEN_ID_
	         left join teaching_class_t class on task.ID_ = class.TASK_ID_
	         left join teaching_class_teacher_t teacher on class.ID_ = teacher.TEACHING_CLASS_ID_
		where 
		     course.CALENDAR_ID_ = #{calendarId} and
             course.TRAINING_LEVEL_ = #{trainingLevel} and 
             class.CAMPUS_ = #{campu}
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseCode)">
            and course.COURSE_CODE_ =#{courseCode,jdbcType=VARCHAR}
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(teacherCode)">
            and teacher.TEACHER_CODE_ =#{teacherCode,jdbcType=VARCHAR}
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(faculty)">
            and course.FACULTY_ =#{faculty,jdbcType=VARCHAR}
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(natrue)">
            and course.NATURE_ =#{natrue,jdbcType=VARCHAR}
        </if>
   </select>
   
    <select id="getNature" parameterType="com.server.edu.election.vo.AllCourseVo" resultType="com.server.edu.election.studentelec.context.ElcCourseResult">
       select distinct(course.NATURE_) natrue
		from course_open_t course
   			 left join teaching_task_t task on course.ID_ = task.COURSE_OPEN_ID_
	         left join teaching_class_t class on task.ID_ = class.TASK_ID_
	         left join teaching_class_teacher_t teacher on class.ID_ = teacher.TEACHING_CLASS_ID_
		where 
		     course.CALENDAR_ID_ = #{calendarId} and
             course.TRAINING_LEVEL_ = #{trainingLevel} and  
             class.CAMPUS_ = #{campu} 
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(courseCode)">
            and course.COURSE_CODE_ =#{courseCode,jdbcType=VARCHAR}
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(teacherCode)">
            and teacher.TEACHER_CODE_ =#{teacherCode,jdbcType=VARCHAR}
        </if>
        <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(faculty)">
            and course.FACULTY_ =#{faculty,jdbcType=VARCHAR}
        </if>
   </select>
   
    <select id="getAllNonSelectedCourseStudent" parameterType="com.server.edu.election.query.ElcResultQuery" resultMap="ResultMap">
       SELECT t4.* FROM student_t t4 WHERE t4.STUDENT_CODE_ NOT IN (SELECT STUDENT_ID_ FROM elc_course_takes_t t2 WHERE CALENDAR_ID_ = #{query.calendarId} GROUP BY t2.STUDENT_ID_)
        <where>
			<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.faculty)">
		        and t4.FACULTY_ = #{query.faculty}
		    </if>
		    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.grade)">
		        and t4.GRADE_ = #{query.grade}
		    </if>
		    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.enrolSeason)">
		        and t4.ENROL_SEASON_ = #{query.enrolSeason}
		    </if>
		    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.degreeType)">
		        and t4.DEGREE_CATEGORY_= #{query.degreeType}
		    </if>
		    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.formLearning)">
		        and t4.FORM_LEARNING_ = #{query.formLearning}
		    </if>
		    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.trainingLevel)">
		        and t4.TRAINING_LEVEL_ = #{query.trainingLevel}
		    </if>
		    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.trainingCategory)">
		        and t4.TRAINING_CATEGORY_ = #{query.trainingCategory}
		    </if>
		    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(query.profession)">
		        and t4.PROFESSION_ = #{query.profession}
		    </if>
	        <if test="@com.server.edu.util.MybatisUtil@isEmpty(query.degreeType)">
		        and (t4.DEGREE_CATEGORY_ = "" or t4.DEGREE_CATEGORY_ is null)
		    </if>
		    <if test="@com.server.edu.util.MybatisUtil@isEmpty(query.formLearning)">
		        and (t4.FORM_LEARNING_ = "" or t4.FORM_LEARNING_ is null)
		    </if>
		    <if test="@com.server.edu.util.MybatisUtil@isEmpty(query.trainingLevel)">
		        and (t4.TRAINING_LEVEL_ = "" or t4.TRAINING_LEVEL_ is null)
		    </if>
		    <if test="@com.server.edu.util.MybatisUtil@isEmpty(query.trainingCategory)">
		        and (t4.TRAINING_CATEGORY_ = "" or t4.TRAINING_CATEGORY_ is null)
		    </if>
		</where>
   </select>
</mapper>