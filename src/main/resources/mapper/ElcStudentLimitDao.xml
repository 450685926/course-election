<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.server.edu.election.dao.ElcStudentLimitDao">
  <resultMap id="BaseResultMap" type="com.server.edu.election.entity.ElcStudentLimit">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="ID_" jdbcType="BIGINT" property="id" />
    <result column="STUDENT_ID_" jdbcType="VARCHAR" property="studentId" />
    <result column="CALENDAR_ID_" jdbcType="BIGINT" property="calendarId" />
    <result column="PROJECT_ID_" jdbcType="VARCHAR" property="projectId" />
    <result column="NEW_LIMIT_CREDITS_" jdbcType="DOUBLE" property="newLimitCredits" />
    <result column="TOTAL_LIMIT_CREDITS_" jdbcType="DOUBLE" property="totalLimitCredits" />
    <result column="REBUILD_LIMIT_NUMBER_" jdbcType="INTEGER" property="rebuildLimitNumber" />
    <result column="CREATED_AT_" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="UPDATED_AT" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <select id="getLimitStudents" parameterType="com.server.edu.election.dto.ElcStudentLimitDto" resultType="com.server.edu.election.vo.ElcStudentLimitVo">
		SELECT  
		      id,
			  studentId,
			  calendarId,
			  projectId,
			  newLimitCredits,
			  totalLimitCredits,
			  rebuildLimitNumber,
			  NAME,
			  sex,
			  grade,
			  faculty,
			  profession,
			  trainingLevel,
			  studentCategory,
			  researchDirection,
			  IFNULL(selectedCredits,0) selectedCredits,
			  IFNULL(selectedRebuild,0) selectedRebuild  
		from(
		SELECT
		    DISTINCT
		    t1.ID_ id,
			t1.STUDENT_ID_ studentId,
			t1.CALENDAR_ID_ calendarId,
			t1.PROJECT_ID_ projectId,
			t1.NEW_LIMIT_CREDITS_ newLimitCredits,
			t1.TOTAL_LIMIT_CREDITS_ totalLimitCredits,
			t1.REBUILD_LIMIT_NUMBER_ rebuildLimitNumber,
			t4.NAME_ name,
			t4.SEX_ sex,
			t4.GRADE_ grade,
			t4.FACULTY_ faculty,
			t4.PROFESSION_ profession,
			t4.TRAINING_LEVEL_ trainingLevel,
			t4.STUDENT_CATEGORY_ studentCategory,
			t4.RESEARCH_DIRECTION_ researchDirection,
			CASE WHEN t2.COURSE_TAKE_TYPE_ = 1 THEN
			sum(t3.CREDITS_) END selectedCredits,
		  CASE WHEN t2.COURSE_TAKE_TYPE_ = 2 THEN
			sum(t3.CREDITS_) END selectedRebuild
		FROM
			elc_student_limit_t t1
		LEFT JOIN elc_course_takes_t_${mode} t2 ON (
			t1.STUDENT_ID_ = t2.STUDENT_ID_
			AND t1.CALENDAR_ID_ = t2.CALENDAR_ID_
			AND t2.CALENDAR_ID_ = #{calendarId}
		)
		LEFT JOIN course_t t3 ON t3.CODE_ = t2.COURSE_CODE_
    JOIN student_t t4 ON t1.STUDENT_ID_ = t4.STUDENT_CODE_
		<where>
		    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(id)">
		        and t1.ID_ = #{id}
		    </if>
			<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(calendarId)">
		        and t1.CALENDAR_ID_ = #{calendarId}
		    </if>
			<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(studentId)">
		        and t1.STUDENT_ID_ = #{studentId}
		    </if>
			<if test="@com.server.edu.util.MybatisUtil@isNotEmpty(name)">
		        and t4.NAME_ = #{name}
		    </if>
		    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(profession)">
		        and t4.PROFESSION_ = #{profession}
		    </if>
		    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(faculty)">
		        and t4.FACULTY_ = #{faculty}
		    </if>
		    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(grade)">
		        and t4.GRADE_ = #{grade}
		    </if>
		    <if test="@com.server.edu.util.MybatisUtil@isNotEmpty(projectId)">
		        and t4.MANAGER_DEPT_ID_ = #{projectId}
		    </if>
		    <if test="minLimitCredits > 0 or maxLimitCredits > 0">
		        and t1.TOTAL_LIMIT_CREDITS_ <![CDATA[ >= ]]> #{minLimitCredits}
		        and t1.TOTAL_LIMIT_CREDITS_ <![CDATA[ <= ]]> #{maxLimitCredits}
		    </if>
		    <if test="minRebuild > 0 or maxRebuild > 0">
		        and t1.REBUILD_LIMIT_NUMBER_ <![CDATA[ >= ]]> #{minRebuild}
		        and t1.REBUILD_LIMIT_NUMBER_ <![CDATA[ <= ]]> #{maxRebuild}
		    </if>
		    </where>
		GROUP BY
			t1.STUDENT_ID_
		) t5 
		<where>
		 	<if test="minSelectedCredits > 0 or maxSelectedCredits > 0">
		        and t5.selectedCredits <![CDATA[ >= ]]> #{minSelectedCredits}
		        and t5.selectedCredits <![CDATA[ <= ]]> #{maxSelectedCredits}
		    </if>
		 	<if test="minSelectedRebuild > 0 or maxSelectedRebuild > 0">
		        and t5.selectedRebuild <![CDATA[ >= ]]> #{minSelectedRebuild}
		        and t5.selectedRebuild <![CDATA[ <= ]]> #{maxSelectedRebuild}
		    </if>
		</where>
  </select>
</mapper>